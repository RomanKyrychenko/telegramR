% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dialogs.R
\name{DialogsIter}
\alias{DialogsIter}
\title{DialogsIter class}
\description{
An iterator for Telegram dialogs.
}
\details{
This class is used to iterate over Telegram dialogs (open conversations/subscribed channels).
The order is the same as the one seen in official applications (first pinned, then from those with the most recent message to those with the oldest message).
}
\section{Super class}{
\code{\link[telegramR:RequestIter]{telegramR::RequestIter}} -> \code{DialogsIter}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DialogsIter-new}{\code{DialogsIter$new()}}
\item \href{#method-DialogsIter-load_next_chunk}{\code{DialogsIter$load_next_chunk()}}
\item \href{#method-DialogsIter-get_init_future}{\code{DialogsIter$get_init_future()}}
\item \href{#method-DialogsIter-clone}{\code{DialogsIter$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id=".next"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-.next'><code>telegramR::RequestIter$.next()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="async_init"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-async_init'><code>telegramR::RequestIter$async_init()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="collect"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-collect'><code>telegramR::RequestIter$collect()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="reset"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-reset'><code>telegramR::RequestIter$reset()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogsIter-new"></a>}}
\if{latex}{\out{\hypertarget{method-DialogsIter-new}{}}}
\subsection{Method \code{new()}}{
Constructor for the DialogsIter class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogsIter$new(
  client,
  limit,
  offset_date = NULL,
  offset_id = 0,
  offset_peer = new("InputPeerEmpty"),
  ignore_pinned = FALSE,
  ignore_migrated = FALSE,
  folder = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{The Telegram client.}

\item{\code{limit}}{The maximum number of dialogs to retrieve.}

\item{\code{offset_date}}{The offset date to be used.}

\item{\code{offset_id}}{The message ID to be used as an offset.}

\item{\code{offset_peer}}{The peer to be used as an offset.}

\item{\code{ignore_pinned}}{Whether pinned dialogs should be ignored or not.}

\item{\code{ignore_migrated}}{Whether Chat that have "migrated_to" a Channel should be included or not.}

\item{\code{folder}}{The folder from which the dialogs should be retrieved.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DialogsIter object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogsIter-load_next_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-DialogsIter-load_next_chunk}{}}}
\subsection{Method \code{load_next_chunk()}}{
Loads the next chunk of dialogs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogsIter$load_next_chunk()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A future that resolves to a list of dialogs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogsIter-get_init_future"></a>}}
\if{latex}{\out{\hypertarget{method-DialogsIter-get_init_future}{}}}
\subsection{Method \code{get_init_future()}}{
Gets the initialization future.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogsIter$get_init_future()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A future that resolves to the initialization result.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogsIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DialogsIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogsIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
