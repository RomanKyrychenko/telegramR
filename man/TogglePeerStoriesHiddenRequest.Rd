% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_stories.R
\docType{class}
\name{TogglePeerStoriesHiddenRequest}
\alias{TogglePeerStoriesHiddenRequest}
\title{TogglePeerStoriesHiddenRequest R6 class}
\format{
An R6 object inheriting from TLRequest (if available)
}
\usage{
TogglePeerStoriesHiddenRequest$new(peer, hidden)
}
\description{
TogglePeerStoriesHiddenRequest R6 class

TogglePeerStoriesHiddenRequest R6 class
}
\details{
Represents a TL request to toggle hidden state for stories of a particular peer.
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{TogglePeerStoriesHiddenRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{peer}}{TypeInputPeer input peer}

\item{\code{hidden}}{logical desired hidden state}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TogglePeerStoriesHiddenRequest-new}{\code{TogglePeerStoriesHiddenRequest$new()}}
\item \href{#method-TogglePeerStoriesHiddenRequest-resolve}{\code{TogglePeerStoriesHiddenRequest$resolve()}}
\item \href{#method-TogglePeerStoriesHiddenRequest-to_list}{\code{TogglePeerStoriesHiddenRequest$to_list()}}
\item \href{#method-TogglePeerStoriesHiddenRequest-to_bytes}{\code{TogglePeerStoriesHiddenRequest$to_bytes()}}
\item \href{#method-TogglePeerStoriesHiddenRequest-clone}{\code{TogglePeerStoriesHiddenRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_dict"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_dict'><code>telegramR::TLObject$to_dict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TogglePeerStoriesHiddenRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-TogglePeerStoriesHiddenRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize TogglePeerStoriesHiddenRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TogglePeerStoriesHiddenRequest$new(peer, hidden)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{peer}}{TypeInputPeer}

\item{\code{hidden}}{logical}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TogglePeerStoriesHiddenRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-TogglePeerStoriesHiddenRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
Resolve peer references

Convert high-level peer references to input peers using provided client/utils.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TogglePeerStoriesHiddenRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{client object with get_input_entity method}

\item{\code{utils}}{utils object with get_input_peer method}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TogglePeerStoriesHiddenRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-TogglePeerStoriesHiddenRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
Convert to list (similar to to_dict)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TogglePeerStoriesHiddenRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TogglePeerStoriesHiddenRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-TogglePeerStoriesHiddenRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
Serialize to raw bytes

Produces a raw vector matching TL binary layout.
Expects helper serialization methods on peer (to_bytes/bytes/_bytes).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TogglePeerStoriesHiddenRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raw
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TogglePeerStoriesHiddenRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TogglePeerStoriesHiddenRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TogglePeerStoriesHiddenRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
