% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_account.R
\name{ToggleNoPaidMessagesExceptionRequest}
\alias{ToggleNoPaidMessagesExceptionRequest}
\title{ToggleNoPaidMessagesExceptionRequest}
\description{
R6 class representing a ToggleNoPaidMessagesExceptionRequest.
}
\details{
This class handles toggling the no paid messages exception for a user.
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{ToggleNoPaidMessagesExceptionRequest}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToggleNoPaidMessagesExceptionRequest-new}{\code{ToggleNoPaidMessagesExceptionRequest$new()}}
\item \href{#method-ToggleNoPaidMessagesExceptionRequest-resolve}{\code{ToggleNoPaidMessagesExceptionRequest$resolve()}}
\item \href{#method-ToggleNoPaidMessagesExceptionRequest-toDict}{\code{ToggleNoPaidMessagesExceptionRequest$toDict()}}
\item \href{#method-ToggleNoPaidMessagesExceptionRequest-bytes}{\code{ToggleNoPaidMessagesExceptionRequest$bytes()}}
\item \href{#method-ToggleNoPaidMessagesExceptionRequest-fromReader}{\code{ToggleNoPaidMessagesExceptionRequest$fromReader()}}
\item \href{#method-ToggleNoPaidMessagesExceptionRequest-clone}{\code{ToggleNoPaidMessagesExceptionRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_dict"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_dict'><code>telegramR::TLObject$to_dict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleNoPaidMessagesExceptionRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleNoPaidMessagesExceptionRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize the ToggleNoPaidMessagesExceptionRequest.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleNoPaidMessagesExceptionRequest$new(
  userId,
  refundCharged = NULL,
  requirePayment = NULL,
  parentPeer = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{userId}}{The input user ID.}

\item{\code{refundCharged}}{Optional boolean for refund charged.}

\item{\code{requirePayment}}{Optional boolean for require payment.}

\item{\code{parentPeer}}{Optional input parent peer.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleNoPaidMessagesExceptionRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleNoPaidMessagesExceptionRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
Resolve the user ID and parent peer using client and utils.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleNoPaidMessagesExceptionRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{The client object.}

\item{\code{utils}}{The utils object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleNoPaidMessagesExceptionRequest-toDict"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleNoPaidMessagesExceptionRequest-toDict}{}}}
\subsection{Method \code{toDict()}}{
Convert to dictionary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleNoPaidMessagesExceptionRequest$toDict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representing the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleNoPaidMessagesExceptionRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleNoPaidMessagesExceptionRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
Serialize to bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleNoPaidMessagesExceptionRequest$bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleNoPaidMessagesExceptionRequest-fromReader"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleNoPaidMessagesExceptionRequest-fromReader}{}}}
\subsection{Method \code{fromReader()}}{
Create from reader.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleNoPaidMessagesExceptionRequest$fromReader(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{The reader object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An instance of ToggleNoPaidMessagesExceptionRequest.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleNoPaidMessagesExceptionRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleNoPaidMessagesExceptionRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleNoPaidMessagesExceptionRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
