% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dialogs.R
\name{DialogMethods}
\alias{DialogMethods}
\title{DialogMethods class}
\description{
A class that provides methods for managing dialogs in Telegram.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DialogMethods-iter_dialogs}{\code{DialogMethods$iter_dialogs()}}
\item \href{#method-DialogMethods-get_dialogs}{\code{DialogMethods$get_dialogs()}}
\item \href{#method-DialogMethods-iter_drafts}{\code{DialogMethods$iter_drafts()}}
\item \href{#method-DialogMethods-get_drafts}{\code{DialogMethods$get_drafts()}}
\item \href{#method-DialogMethods-edit_folder}{\code{DialogMethods$edit_folder()}}
\item \href{#method-DialogMethods-delete_dialog}{\code{DialogMethods$delete_dialog()}}
\item \href{#method-DialogMethods-conversation}{\code{DialogMethods$conversation()}}
\item \href{#method-DialogMethods-clone}{\code{DialogMethods$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-iter_dialogs"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-iter_dialogs}{}}}
\subsection{Method \code{iter_dialogs()}}{
Gets an iterator over dialogs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$iter_dialogs(
  limit = NULL,
  offset_date = NULL,
  offset_id = 0,
  offset_peer = types$InputPeerEmpty(),
  ignore_pinned = FALSE,
  ignore_migrated = FALSE,
  folder = NULL,
  archived = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limit}}{The maximum number of dialogs to retrieve.}

\item{\code{offset_date}}{The offset date to be used.}

\item{\code{offset_id}}{The message ID to be used as an offset.}

\item{\code{offset_peer}}{The peer to be used as an offset.}

\item{\code{ignore_pinned}}{Whether pinned dialogs should be ignored or not.}

\item{\code{ignore_migrated}}{Whether Chat that have "migrated_to" a Channel should be included or not.}

\item{\code{folder}}{The folder from which the dialogs should be retrieved.}

\item{\code{archived}}{Alias for folder. If unspecified, all will be returned,
FALSE implies folder=0 and TRUE implies folder=1.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An iterator over dialogs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-get_dialogs"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-get_dialogs}{}}}
\subsection{Method \code{get_dialogs()}}{
Gets the dialogs (open conversations/subscribed channels).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$get_dialogs(
  limit = NULL,
  offset_date = NULL,
  offset_id = 0,
  offset_peer = types$InputPeerEmpty(),
  ignore_pinned = FALSE,
  ignore_migrated = FALSE,
  folder = NULL,
  archived = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limit}}{How many dialogs to be retrieved as maximum. Can be set to
NULL to retrieve all dialogs. Note that this may take
whole minutes if you have hundreds of dialogs, as Telegram
will tell the library to slow down through a
"FloodWaitError".}

\item{\code{offset_date}}{The offset date to be used.}

\item{\code{offset_id}}{The message ID to be used as an offset.}

\item{\code{offset_peer}}{The peer to be used as an offset.}

\item{\code{ignore_pinned}}{Whether pinned dialogs should be ignored or not.}

\item{\code{ignore_migrated}}{Whether Chat that have "migrated_to" a Channel
should be included or not. By default all the chats in your
dialogs are returned, but setting this to TRUE will ignore
(i.e. skip) them in the same way official applications do.}

\item{\code{folder}}{The folder from which the dialogs should be retrieved.}

\item{\code{archived}}{Alias for folder. If unspecified, all will be returned,
FALSE implies folder=0 and TRUE implies folder=1.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of dialogs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-iter_drafts"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-iter_drafts}{}}}
\subsection{Method \code{iter_drafts()}}{
Gets the draft messages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$iter_drafts(entity = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The entity or list of entities for which to fetch the draft messages.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An iterator over draft messages.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-get_drafts"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-get_drafts}{}}}
\subsection{Method \code{get_drafts()}}{
Gets the draft messages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$get_drafts(entity = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The entity or list of entities for which to fetch the draft messages.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of draft messages.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-edit_folder"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-edit_folder}{}}}
\subsection{Method \code{edit_folder()}}{
Edits the folder used by one or more dialogs to archive them.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$edit_folder(entity = NULL, folder = NULL, unpack = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The entity or list of entities to move to the desired archive folder.}

\item{\code{folder}}{The folder to which the dialog should be archived to.}

\item{\code{unpack}}{If you want to unpack an archived folder, set this
parameter to the folder number that you want to delete.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The Updates object that the request produces.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-delete_dialog"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-delete_dialog}{}}}
\subsection{Method \code{delete_dialog()}}{
Deletes a dialog (leaves a chat or channel).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$delete_dialog(entity, revoke = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The entity of the dialog to delete.}

\item{\code{revoke}}{Whether to revoke the messages from the other peer.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The Updates object that the request produces, or nothing for private conversations.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-conversation"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-conversation}{}}}
\subsection{Method \code{conversation()}}{
Creates a new conversation with the given entity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$conversation(
  entity,
  timeout = 60,
  total_timeout = NULL,
  max_messages = 100,
  exclusive = TRUE,
  replies_are_responses = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The entity with which a new conversation should be opened.}

\item{\code{timeout}}{The default timeout (in seconds) per action to be used.}

\item{\code{total_timeout}}{The total timeout (in seconds) to use for the whole conversation.}

\item{\code{max_messages}}{The maximum amount of messages this conversation will remember.}

\item{\code{exclusive}}{Whether the conversation should be exclusive within a single chat.}

\item{\code{replies_are_responses}}{Whether replies should be treated as responses or not.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new Conversation object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DialogMethods-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DialogMethods-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DialogMethods$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
