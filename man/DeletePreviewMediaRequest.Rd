% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_bots.R
\name{DeletePreviewMediaRequest}
\alias{DeletePreviewMediaRequest}
\title{DeletePreviewMediaRequest R6 class}
\description{
Methods:
- initialize(bot, lang_code, media)
- resolve(client, utils)
- to_list() -> list representation
- to_bytes() -> raw vector bytes

Each method is documented inline below.
}
\details{
Represents the DeletePreviewMediaRequest TL request.
}
\examples{
# o <- DeletePreviewMediaRequest$new(botObj, "en", list(media1, media2))
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{bot}}{TypeInputUser input user or object implementing to_list()/to_bytes()}

\item{\code{lang_code}}{character language code}

\item{\code{media}}{list of TypeInputMedia objects or representations}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DeletePreviewMediaRequest-new}{\code{DeletePreviewMediaRequest$new()}}
\item \href{#method-DeletePreviewMediaRequest-resolve}{\code{DeletePreviewMediaRequest$resolve()}}
\item \href{#method-DeletePreviewMediaRequest-to_list}{\code{DeletePreviewMediaRequest$to_list()}}
\item \href{#method-DeletePreviewMediaRequest-to_bytes}{\code{DeletePreviewMediaRequest$to_bytes()}}
\item \href{#method-DeletePreviewMediaRequest-clone}{\code{DeletePreviewMediaRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DeletePreviewMediaRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-DeletePreviewMediaRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeletePreviewMediaRequest$new(bot, lang_code, media)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bot}}{TypeInputUser or identifier}

\item{\code{lang_code}}{character}

\item{\code{media}}{list of TypeInputMedia or objects
Resolve references (convert entities via client/utils)

Resolves bot via client$get_input_entity and utils$get_input_user.
Resolves each media entry via utils$get_input_media.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DeletePreviewMediaRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-DeletePreviewMediaRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeletePreviewMediaRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{client with get_input_entity method}

\item{\code{utils}}{utils with get_input_user and get_input_media}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
invisible(self)
Convert to list (dictionary-like)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DeletePreviewMediaRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-DeletePreviewMediaRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeletePreviewMediaRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list
Serialize to bytes (raw vector)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DeletePreviewMediaRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-DeletePreviewMediaRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeletePreviewMediaRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raw
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DeletePreviewMediaRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DeletePreviewMediaRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeletePreviewMediaRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
