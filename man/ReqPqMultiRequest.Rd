% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tlobject.R, R/functions.R, R/requests.R
\name{ReqPqMultiRequest}
\alias{ReqPqMultiRequest}
\title{ReqPqMultiRequest Class}
\description{
A class representing the `ReqPqMultiRequest` object. This class is used to handle
the serialization and deserialization of the `ReqPqMultiRequest` object.

Methods:
- new(nonce): create new instance.
- to_list(): return an R list representation.
- to_raw(): serialize to raw vector (bytes) in little endian as used in TL.

Note: 128-bit integer handling is represented here as numeric/double placeholders.
For precise 128-bit two's-complement behavior, use a big-integer library and
implement a precise serializer.
Initialize a ReqPqMultiRequest

Represents a request for the server's PQ (prime factor) during the initial
key exchange (multi variant). Holds a 128-bit `nonce` generated by the client.
}
\details{
Represents the TL request `ReqPqMultiRequest`.
}
\examples{
# req <- ReqPqMultiRequest$new(nonce = some_large_int)
# bytes <- req$to_bytes()
Initialize a new ReqPqMultiRequest

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{A unique identifier for the TL object.}

\item{\code{SUBCLASS_OF_ID}}{A unique identifier for the subclass of the TL object.}

\item{\code{nonce}}{The `nonce` value as an integer.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ReqPqMultiRequest-new}{\code{ReqPqMultiRequest$new()}}
\item \href{#method-ReqPqMultiRequest-to_list}{\code{ReqPqMultiRequest$to_list()}}
\item \href{#method-ReqPqMultiRequest-to_bytes}{\code{ReqPqMultiRequest$to_bytes()}}
\item \href{#method-ReqPqMultiRequest-clone}{\code{ReqPqMultiRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$new(nonce)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$to_bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{nonce}}{numeric/integer 128-bit nonce (placeholder representation)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ReqPqMultiRequest-new}{\code{ReqPqMultiRequest$new()}}
\item \href{#method-ReqPqMultiRequest-to_list}{\code{ReqPqMultiRequest$to_list()}}
\item \href{#method-ReqPqMultiRequest-to_bytes}{\code{ReqPqMultiRequest$to_bytes()}}
\item \href{#method-ReqPqMultiRequest-clone}{\code{ReqPqMultiRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$new(nonce)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$to_bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier.}

\item{\code{nonce}}{128-bit nonce (large int or raw).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ReqPqMultiRequest-new}{\code{ReqPqMultiRequest$new()}}
\item \href{#method-ReqPqMultiRequest-to_list}{\code{ReqPqMultiRequest$to_list()}}
\item \href{#method-ReqPqMultiRequest-to_bytes}{\code{ReqPqMultiRequest$to_bytes()}}
\item \href{#method-ReqPqMultiRequest-clone}{\code{ReqPqMultiRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$new(nonce)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nonce}}{128-bit nonce generated by the client (large int or raw).
Convert to list representation

Returns a plain R list useful for debugging or JSON-like inspection.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list with keys: \code{"_"} and \code{nonce}.
Serialize to raw bytes

Serializes the request according to the protocol:
- constructor id (4 bytes, little-endian)
- `nonce` as a 128-bit (16-byte) little-endian value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector containing the serialized request bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqMultiRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqMultiRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqMultiRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
