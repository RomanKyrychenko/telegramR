% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_langpack.R
\name{GetStringsRequest}
\alias{GetStringsRequest}
\title{GetStringsRequest R6 class}
\value{
A GetStringsRequest R6 object
}
\description{
TLRequest: GetStringsRequest
}
\examples{
# req <- GetStringsRequest$new("default", "en", c("hello", "bye"))
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{GetStringsRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{lang_pack}}{character Language pack identifier}

\item{\code{lang_code}}{character Language code}

\item{\code{keys}}{character Vector of keys to request}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GetStringsRequest-new}{\code{GetStringsRequest$new()}}
\item \href{#method-GetStringsRequest-to_dict}{\code{GetStringsRequest$to_dict()}}
\item \href{#method-GetStringsRequest-bytes}{\code{GetStringsRequest$bytes()}}
\item \href{#method-GetStringsRequest-from_reader}{\code{GetStringsRequest$from_reader()}}
\item \href{#method-GetStringsRequest-clone}{\code{GetStringsRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="resolve"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-resolve'><code>telegramR::TLRequest$resolve()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetStringsRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-GetStringsRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetStringsRequest$new(lang_pack, lang_code, keys)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetStringsRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-GetStringsRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetStringsRequest$to_dict()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetStringsRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-GetStringsRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetStringsRequest$bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetStringsRequest-from_reader"></a>}}
\if{latex}{\out{\hypertarget{method-GetStringsRequest-from_reader}{}}}
\subsection{Method \code{from_reader()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetStringsRequest$from_reader(reader)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetStringsRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GetStringsRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GetStringsRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
