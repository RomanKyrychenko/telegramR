% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tlmessage.R
\name{TLMessage}
\alias{TLMessage}
\title{TLMessage Class}
\description{
A class representing a Telegram Layer (TL) message.
}
\details{
This class extends the `TLObject` class and provides functionality to store and manipulate TL message data.
}
\examples{
msg <- TLMessage(msg_id = 12345, seq_no = 1, obj = "Hello")
print(msg$to_dict())

## ------------------------------------------------
## Method `TLMessage$to_dict`
## ------------------------------------------------

msg <- TLMessage(msg_id = 12345, seq_no = 1, obj = "Hello")
msg$to_dict()
}
\section{Super class}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{TLMessage}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TLMessage-new}{\code{TLMessage$new()}}
\item \href{#method-TLMessage-to_dict}{\code{TLMessage$to_dict()}}
\item \href{#method-TLMessage-clone}{\code{TLMessage$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLMessage-new"></a>}}
\if{latex}{\out{\hypertarget{method-TLMessage-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new `TLMessage` object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLMessage$new(msg_id, seq_no, obj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{msg_id}}{A numeric value for the message ID.}

\item{\code{seq_no}}{A numeric value for the sequence number.}

\item{\code{obj}}{An object representing the content of the message.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `TLMessage` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLMessage-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-TLMessage-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Convert the `TLMessage` object to a dictionary representation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLMessage$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing the fields of the `TLMessage` object in dictionary format.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{msg <- TLMessage(msg_id = 12345, seq_no = 1, obj = "Hello")
msg$to_dict()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLMessage-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TLMessage-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLMessage$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
