% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/requests.R
\name{InvokeWithMessagesRangeRequest}
\alias{InvokeWithMessagesRangeRequest}
\title{InvokeWithMessagesRangeRequest R6 class}
\description{
R6 class representing a request that wraps a nested `query` and applies it
to a provided `range` of messages. The `range` is expected to be an object
that implements `to_list()` and `to_bytes()` (e.g. a message range descriptor),
and `query` is a nested Telegram-like object that also implements
`to_list()` and `to_bytes()`.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier for the request.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier for the request.}

\item{\code{range}}{Object describing the range of messages (must implement `to_list`/`to_bytes`).}

\item{\code{query}}{Nested query object (must implement `to_list`/`to_bytes`).
Initialize a new InvokeWithMessagesRangeRequest}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeWithMessagesRangeRequest-new}{\code{InvokeWithMessagesRangeRequest$new()}}
\item \href{#method-InvokeWithMessagesRangeRequest-to_list}{\code{InvokeWithMessagesRangeRequest$to_list()}}
\item \href{#method-InvokeWithMessagesRangeRequest-to_bytes}{\code{InvokeWithMessagesRangeRequest$to_bytes()}}
\item \href{#method-InvokeWithMessagesRangeRequest-clone}{\code{InvokeWithMessagesRangeRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithMessagesRangeRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithMessagesRangeRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithMessagesRangeRequest$new(range, query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{range}}{Object describing the messages range (expected to implement `to_list` and `to_bytes`).}

\item{\code{query}}{Nested query object that responds to `to_list` and `to_bytes`.
Convert to list representation

Produces a plain R list suitable for debugging or JSON serialization.
If `range` or `query` implement `to_list`, their representations will be used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithMessagesRangeRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithMessagesRangeRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithMessagesRangeRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with keys: `_`, `range`, and `query`.
Serialize to raw bytes

Produces a raw vector containing:
- constructor id (4 bytes, little-endian)
- serialized `range` bytes (via `range$to_bytes()`)
- serialized nested `query` bytes (via `query$to_bytes()`)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithMessagesRangeRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithMessagesRangeRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithMessagesRangeRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector with serialized request bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithMessagesRangeRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithMessagesRangeRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithMessagesRangeRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
