% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chats.R
\name{.AdminLogIter}
\alias{.AdminLogIter}
\title{_AdminLogIter R6 Class}
\description{
_AdminLogIter R6 Class

_AdminLogIter R6 Class
}
\details{
An iterator over the admin log for the specified channel.
The default order is from the most recent event to the oldest.
Inherits from RequestIter.
}
\section{Super class}{
\code{\link[telegramR:RequestIter]{telegramR::RequestIter}} -> \code{_AdminLogIter}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{client}}{The TelegramClient instance.}

\item{\code{limit}}{The limit for the number of events.}

\item{\code{total}}{The total number of events.}

\item{\code{buffer}}{The buffer holding the current chunk of events.}

\item{\code{left}}{The number of items left to process.}

\item{\code{request}}{The current request object.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{client}}{The TelegramClient instance.}

\item{\code{limit}}{The limit for the number of events.}

\item{\code{total}}{The total number of events.}

\item{\code{buffer}}{The buffer holding the current chunk of events.}

\item{\code{left}}{The number of items left to process.}

\item{\code{request}}{The current request object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-_AdminLogIter-.init}{\code{.AdminLogIter$.init()}}
\item \href{#method-_AdminLogIter-.load_next_chunk}{\code{.AdminLogIter$.load_next_chunk()}}
\item \href{#method-_AdminLogIter-clone}{\code{.AdminLogIter$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id=".next"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-.next'><code>telegramR::RequestIter$.next()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="async_init"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-async_init'><code>telegramR::RequestIter$async_init()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="collect"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-collect'><code>telegramR::RequestIter$collect()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="initialize"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-initialize'><code>telegramR::RequestIter$initialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="load_next_chunk"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-load_next_chunk'><code>telegramR::RequestIter$load_next_chunk()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="reset"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-reset'><code>telegramR::RequestIter$reset()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-_AdminLogIter-.init"></a>}}
\if{latex}{\out{\hypertarget{method-_AdminLogIter-.init}{}}}
\subsection{Method \code{.init()}}{
Initialize the iterator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.AdminLogIter$.init(
  entity,
  admins = NULL,
  search = NULL,
  min_id = 0,
  max_id = 0,
  join = NULL,
  leave = NULL,
  invite = NULL,
  restrict = NULL,
  unrestrict = NULL,
  ban = NULL,
  unban = NULL,
  promote = NULL,
  demote = NULL,
  info = NULL,
  settings = NULL,
  pinned = NULL,
  edit = NULL,
  delete = NULL,
  group_call = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The channel entity from which to get its admin log.}

\item{\code{admins}}{If present, filter by these admins. Default is NULL.}

\item{\code{search}}{The string to be used as a search query. Default is NULL.}

\item{\code{min_id}}{All events with a lower (older) ID or equal to this will be excluded. Default is 0.}

\item{\code{max_id}}{All events with a higher (newer) ID or equal to this will be excluded. Default is 0.}

\item{\code{join}}{If TRUE, events for when a user joined will be returned. Default is NULL.}

\item{\code{leave}}{If TRUE, events for when a user leaves will be returned. Default is NULL.}

\item{\code{invite}}{If TRUE, events for when a user joins through an invite link will be returned. Default is NULL.}

\item{\code{restrict}}{If TRUE, events with partial restrictions will be returned. Default is NULL.}

\item{\code{unrestrict}}{If TRUE, events removing restrictions will be returned. Default is NULL.}

\item{\code{ban}}{If TRUE, events applying or removing all restrictions will be returned. Default is NULL.}

\item{\code{unban}}{If TRUE, events removing all restrictions will be returned. Default is NULL.}

\item{\code{promote}}{If TRUE, events with admin promotions will be returned. Default is NULL.}

\item{\code{demote}}{If TRUE, events with admin demotions will be returned. Default is NULL.}

\item{\code{info}}{If TRUE, events changing the group info will be returned. Default is NULL.}

\item{\code{settings}}{If TRUE, events changing the group settings will be returned. Default is NULL.}

\item{\code{pinned}}{If TRUE, events of new pinned messages will be returned. Default is NULL.}

\item{\code{edit}}{If TRUE, events of message edits will be returned. Default is NULL.}

\item{\code{delete}}{If TRUE, events of message deletions will be returned. Default is NULL.}

\item{\code{group_call}}{If TRUE, events related to group calls will be returned. Default is NULL.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-_AdminLogIter-.load_next_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-_AdminLogIter-.load_next_chunk}{}}}
\subsection{Method \code{.load_next_chunk()}}{
Load the next chunk of admin log events.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.AdminLogIter$.load_next_chunk()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-_AdminLogIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-_AdminLogIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.AdminLogIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
