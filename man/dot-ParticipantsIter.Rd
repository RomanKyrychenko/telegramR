% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chats.R
\name{.ParticipantsIter}
\alias{.ParticipantsIter}
\title{_ParticipantsIter R6 Class}
\description{
_ParticipantsIter R6 Class

_ParticipantsIter R6 Class
}
\details{
An iterator over the participants belonging to the specified chat.
The order is unspecified.
Inherits from RequestIter.
}
\section{Super class}{
\code{\link[telegramR:RequestIter]{telegramR::RequestIter}} -> \code{_ParticipantsIter}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{client}}{The TelegramClient instance.}

\item{\code{limit}}{The limit for the number of participants.}

\item{\code{total}}{The total number of participants.}

\item{\code{buffer}}{The buffer holding the current chunk of participants.}

\item{\code{left}}{The number of items left to process.}

\item{\code{request}}{The current request object.}

\item{\code{filter_entity}}{A function to filter entities based on search.}

\item{\code{seen}}{A set of seen user IDs to avoid duplicates.}

\item{\code{requests}}{The request object for channels.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{client}}{The TelegramClient instance.}

\item{\code{limit}}{The limit for the number of participants.}

\item{\code{total}}{The total number of participants.}

\item{\code{buffer}}{The buffer holding the current chunk of participants.}

\item{\code{left}}{The number of items left to process.}

\item{\code{request}}{The current request object.}

\item{\code{filter_entity}}{A function to filter entities based on search.}

\item{\code{seen}}{A set of seen user IDs to avoid duplicates.}

\item{\code{requests}}{The request object for channels.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-_ParticipantsIter-new}{\code{.ParticipantsIter$new()}}
\item \href{#method-_ParticipantsIter-.load_next_chunk}{\code{.ParticipantsIter$.load_next_chunk()}}
\item \href{#method-_ParticipantsIter-clone}{\code{.ParticipantsIter$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id=".next"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-.next'><code>telegramR::RequestIter$.next()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="async_init"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-async_init'><code>telegramR::RequestIter$async_init()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="collect"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-collect'><code>telegramR::RequestIter$collect()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="load_next_chunk"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-load_next_chunk'><code>telegramR::RequestIter$load_next_chunk()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="reset"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-reset'><code>telegramR::RequestIter$reset()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-_ParticipantsIter-new"></a>}}
\if{latex}{\out{\hypertarget{method-_ParticipantsIter-new}{}}}
\subsection{Method \code{new()}}{
Initialize the iterator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.ParticipantsIter$new(entity, filter = NULL, search = "")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity}}{The entity from which to retrieve the participants list.}

\item{\code{filter}}{The filter to be used, if you want e.g. only admins. Default is NULL.}

\item{\code{search}}{Look for participants with this string in name/username. Default is ''.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-_ParticipantsIter-.load_next_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-_ParticipantsIter-.load_next_chunk}{}}}
\subsection{Method \code{.load_next_chunk()}}{
Load the next chunk of participants.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.ParticipantsIter$.load_next_chunk()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-_ParticipantsIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-_ParticipantsIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{.ParticipantsIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
