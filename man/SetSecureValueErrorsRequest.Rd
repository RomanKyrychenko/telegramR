% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_users.R
\name{SetSecureValueErrorsRequest}
\alias{SetSecureValueErrorsRequest}
\title{SetSecureValueErrorsRequest R6 Class}
\description{
Represents a request to set secure value errors for a Telegram user. This class is typically used internally to serialize and deserialize requests and responses when interacting with the Telegram API.
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{SetSecureValueErrorsRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer. Unique constructor ID for this request type.}

\item{\code{SUBCLASS_OF_ID}}{Integer. Unique subclass ID.}

\item{\code{id}}{Object or NULL. The user identifier, expected to be a TLObject or compatible input.}

\item{\code{errors}}{List or NULL. List of error objects (typically TLObjects) to be set for the user.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SetSecureValueErrorsRequest-new}{\code{SetSecureValueErrorsRequest$new()}}
\item \href{#method-SetSecureValueErrorsRequest-resolve}{\code{SetSecureValueErrorsRequest$resolve()}}
\item \href{#method-SetSecureValueErrorsRequest-to_dict}{\code{SetSecureValueErrorsRequest$to_dict()}}
\item \href{#method-SetSecureValueErrorsRequest-.bytes}{\code{SetSecureValueErrorsRequest$.bytes()}}
\item \href{#method-SetSecureValueErrorsRequest-from_reader}{\code{SetSecureValueErrorsRequest$from_reader()}}
\item \href{#method-SetSecureValueErrorsRequest-clone}{\code{SetSecureValueErrorsRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SetSecureValueErrorsRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-SetSecureValueErrorsRequest-new}{}}}
\subsection{Method \code{new()}}{
Request to set secure value errors for a user.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SetSecureValueErrorsRequest$new(id = NULL, errors = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{TLInputUser or a representation accepted by get_input_user}

\item{\code{errors}}{List of TLSecureValueError or representations accepted by get_secure_value_error}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SetSecureValueErrorsRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-SetSecureValueErrorsRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
Initializes the SetSecureValueErrorsRequest.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SetSecureValueErrorsRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{TLInputUser or a representation accepted by get_input_user}

\item{\code{errors}}{List of TLSecureValueError or representations accepted by get_secure_value}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SetSecureValueErrorsRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-SetSecureValueErrorsRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Resolves the id and errors fields using the provided client and utils.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SetSecureValueErrorsRequest$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with resolved id and errors.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SetSecureValueErrorsRequest-.bytes"></a>}}
\if{latex}{\out{\hypertarget{method-SetSecureValueErrorsRequest-.bytes}{}}}
\subsection{Method \code{.bytes()}}{
Converts the SetSecureValueErrorsRequest to a dictionary (list).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SetSecureValueErrorsRequest$.bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representation of the SetSecureValueErrorsRequest.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SetSecureValueErrorsRequest-from_reader"></a>}}
\if{latex}{\out{\hypertarget{method-SetSecureValueErrorsRequest-from_reader}{}}}
\subsection{Method \code{from_reader()}}{
Converts the SetSecureValueErrorsRequest to raw bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SetSecureValueErrorsRequest$from_reader(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{A reader object to read the response.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector representing the SetSecureValueErrorsRequest.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SetSecureValueErrorsRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SetSecureValueErrorsRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SetSecureValueErrorsRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
