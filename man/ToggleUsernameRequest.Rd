% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_account.R, R/functions_bots.R,
%   R/functions_channels.R
\name{ToggleUsernameRequest}
\alias{ToggleUsernameRequest}
\title{ToggleUsernameRequest}
\description{
R6 class representing a ToggleUsernameRequest.

Methods:
- initialize(bot, username, active)
- resolve(client, utils)
- to_list() -> list representation
- to_bytes() -> raw vector bytes

Represents a request to toggle the active status of a username in a channel.
}
\details{
This class handles toggling the active status of a username.

Represents the ToggleUsernameRequest TL request.
}
\examples{
# o <- ToggleUsernameRequest$new(bot, "myusername", TRUE)
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{ToggleUsernameRequest}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToggleUsernameRequest-new}{\code{ToggleUsernameRequest$new()}}
\item \href{#method-ToggleUsernameRequest-resolve}{\code{ToggleUsernameRequest$resolve()}}
\item \href{#method-ToggleUsernameRequest-to_dict}{\code{ToggleUsernameRequest$to_dict()}}
\item \href{#method-ToggleUsernameRequest-bytes}{\code{ToggleUsernameRequest$bytes()}}
\item \href{#method-ToggleUsernameRequest-clone}{\code{ToggleUsernameRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$new(channel, username, active)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$to_dict()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{ToggleUsernameRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{bot}}{TypeInputUser input user or object implementing to_list()/to_bytes()}

\item{\code{username}}{character}

\item{\code{active}}{logical}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{bot}}{TypeInputUser input user or object implementing to_list()/to_bytes()}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToggleUsernameRequest-new}{\code{ToggleUsernameRequest$new()}}
\item \href{#method-ToggleUsernameRequest-resolve}{\code{ToggleUsernameRequest$resolve()}}
\item \href{#method-ToggleUsernameRequest-to_dict}{\code{ToggleUsernameRequest$to_dict()}}
\item \href{#method-ToggleUsernameRequest-bytes}{\code{ToggleUsernameRequest$bytes()}}
\item \href{#method-ToggleUsernameRequest-clone}{\code{ToggleUsernameRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$new(channel, username, active)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$to_dict()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{ToggleUsernameRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{The constructor ID for this request.}

\item{\code{SUBCLASS_OF_ID}}{The subclass ID for this request.}

\item{\code{channel}}{The input channel.}

\item{\code{username}}{The username.}

\item{\code{active}}{Whether the username is active.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ToggleUsernameRequest-new}{\code{ToggleUsernameRequest$new()}}
\item \href{#method-ToggleUsernameRequest-resolve}{\code{ToggleUsernameRequest$resolve()}}
\item \href{#method-ToggleUsernameRequest-to_dict}{\code{ToggleUsernameRequest$to_dict()}}
\item \href{#method-ToggleUsernameRequest-bytes}{\code{ToggleUsernameRequest$bytes()}}
\item \href{#method-ToggleUsernameRequest-clone}{\code{ToggleUsernameRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize the ToggleUsernameRequest.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$new(channel, username, active)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{channel}}{The input channel.}

\item{\code{username}}{The username.}

\item{\code{active}}{Whether the username is active.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
Resolve the channel entity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{The client object.}

\item{\code{utils}}{The utilities object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Convert the object to a dictionary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representing the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
Serialize the object to bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A raw vector of bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ToggleUsernameRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ToggleUsernameRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ToggleUsernameRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
