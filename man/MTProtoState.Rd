% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mtprotostate.R
\name{MTProtoState}
\alias{MTProtoState}
\title{MTProto protocol state management}
\description{
Manages the state needed for MTProto encryption, including message IDs,
sequence numbers, and server salt.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MTProtoState-new}{\code{MTProtoState$new()}}
\item \href{#method-MTProtoState-reset}{\code{MTProtoState$reset()}}
\item \href{#method-MTProtoState-update_message_id}{\code{MTProtoState$update_message_id()}}
\item \href{#method-MTProtoState-write_data_as_message}{\code{MTProtoState$write_data_as_message()}}
\item \href{#method-MTProtoState-encrypt_message_data}{\code{MTProtoState$encrypt_message_data()}}
\item \href{#method-MTProtoState-decrypt_message_data}{\code{MTProtoState$decrypt_message_data()}}
\item \href{#method-MTProtoState-get_new_msg_id}{\code{MTProtoState$get_new_msg_id()}}
\item \href{#method-MTProtoState-update_time_offset}{\code{MTProtoState$update_time_offset()}}
\item \href{#method-MTProtoState-clone}{\code{MTProtoState$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-new"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new MTProto state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$new(auth_key, loggers)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{auth_key}}{Authentication key for encryption}

\item{\code{loggers}}{Logger objects}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-reset"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-reset}{}}}
\subsection{Method \code{reset()}}{
Reset the state
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$reset()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-update_message_id"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-update_message_id}{}}}
\subsection{Method \code{update_message_id()}}{
Update message ID when time offset changes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$update_message_id(message)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{message}}{Message object to update}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-write_data_as_message"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-write_data_as_message}{}}}
\subsection{Method \code{write_data_as_message()}}{
Write a message containing given data into buffer
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$write_data_as_message(
  buffer,
  data,
  content_related,
  after_id = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{buffer}}{Buffer to write to}

\item{\code{data}}{Data to include in the message}

\item{\code{content_related}}{Boolean indicating if message is content-related}

\item{\code{after_id}}{Optional message ID to invoke after}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Message ID of the written message
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-encrypt_message_data"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-encrypt_message_data}{}}}
\subsection{Method \code{encrypt_message_data()}}{
Encrypt message data using current authorization key
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$encrypt_message_data(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{Data to encrypt}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Encrypted message data
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-decrypt_message_data"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-decrypt_message_data}{}}}
\subsection{Method \code{decrypt_message_data()}}{
Decrypt message data from server
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$decrypt_message_data(body)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{body}}{Encrypted message body}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Decrypted message or NULL if message should be ignored
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-get_new_msg_id"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-get_new_msg_id}{}}}
\subsection{Method \code{get_new_msg_id()}}{
Generate a new unique message ID
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$get_new_msg_id()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
New message ID
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-update_time_offset"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-update_time_offset}{}}}
\subsection{Method \code{update_time_offset()}}{
Update time offset based on a correct message ID
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$update_time_offset(correct_msg_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{correct_msg_id}}{Known valid message ID}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Updated time offset
Calculate encryption key and initialization vector
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MTProtoState-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MTProtoState-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MTProtoState$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
