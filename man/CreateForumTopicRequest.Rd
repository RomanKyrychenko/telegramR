% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_channels.R
\name{CreateForumTopicRequest}
\alias{CreateForumTopicRequest}
\title{CreateForumTopicRequest}
\description{
Represents a request to create a forum topic in a channel.
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{CreateForumTopicRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{The constructor ID for this request.}

\item{\code{SUBCLASS_OF_ID}}{The subclass ID for this request.}

\item{\code{channel}}{The input channel.}

\item{\code{title}}{The title of the topic.}

\item{\code{icon_color}}{The icon color (optional).}

\item{\code{icon_emoji_id}}{The icon emoji ID (optional).}

\item{\code{random_id}}{The random ID.}

\item{\code{send_as}}{The send as peer (optional).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CreateForumTopicRequest-new}{\code{CreateForumTopicRequest$new()}}
\item \href{#method-CreateForumTopicRequest-resolve}{\code{CreateForumTopicRequest$resolve()}}
\item \href{#method-CreateForumTopicRequest-to_dict}{\code{CreateForumTopicRequest$to_dict()}}
\item \href{#method-CreateForumTopicRequest-bytes}{\code{CreateForumTopicRequest$bytes()}}
\item \href{#method-CreateForumTopicRequest-clone}{\code{CreateForumTopicRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateForumTopicRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-CreateForumTopicRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize the CreateForumTopicRequest.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateForumTopicRequest$new(
  channel,
  title,
  icon_color = NULL,
  icon_emoji_id = NULL,
  random_id = NULL,
  send_as = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{channel}}{The input channel.}

\item{\code{title}}{The title of the topic.}

\item{\code{icon_color}}{The icon color (optional).}

\item{\code{icon_emoji_id}}{The icon emoji ID (optional).}

\item{\code{random_id}}{The random ID (optional).}

\item{\code{send_as}}{The send as peer (optional).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateForumTopicRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-CreateForumTopicRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
Resolve the channel and send_as entities.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateForumTopicRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{The client object.}

\item{\code{utils}}{The utilities object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateForumTopicRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-CreateForumTopicRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Convert the object to a dictionary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateForumTopicRequest$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representing the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateForumTopicRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-CreateForumTopicRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
Serialize the object to bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateForumTopicRequest$bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A raw vector of bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateForumTopicRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CreateForumTopicRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateForumTopicRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
