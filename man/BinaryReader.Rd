% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binaryreader.R
\name{BinaryReader}
\alias{BinaryReader}
\title{BinaryReader Class}
\description{
A utility class to read binary data, inspired by Python's BinaryReader.
}
\details{
Provides methods to read various data types and handle stream positions.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BinaryReader-new}{\code{BinaryReader$new()}}
\item \href{#method-BinaryReader-read_byte}{\code{BinaryReader$read_byte()}}
\item \href{#method-BinaryReader-read_int}{\code{BinaryReader$read_int()}}
\item \href{#method-BinaryReader-read_long}{\code{BinaryReader$read_long()}}
\item \href{#method-BinaryReader-read_float}{\code{BinaryReader$read_float()}}
\item \href{#method-BinaryReader-read_double}{\code{BinaryReader$read_double()}}
\item \href{#method-BinaryReader-read}{\code{BinaryReader$read()}}
\item \href{#method-BinaryReader-get_bytes}{\code{BinaryReader$get_bytes()}}
\item \href{#method-BinaryReader-close}{\code{BinaryReader$close()}}
\item \href{#method-BinaryReader-tell_position}{\code{BinaryReader$tell_position()}}
\item \href{#method-BinaryReader-set_position}{\code{BinaryReader$set_position()}}
\item \href{#method-BinaryReader-seek}{\code{BinaryReader$seek()}}
\item \href{#method-BinaryReader-bytes_to_int}{\code{BinaryReader$bytes_to_int()}}
\item \href{#method-BinaryReader-clone}{\code{BinaryReader$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-new"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-new}{}}}
\subsection{Method \code{new()}}{
Initializes the BinaryReader with the given binary data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$new(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A raw vector representing the binary data to read.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-read_byte"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-read_byte}{}}}
\subsection{Method \code{read_byte()}}{
Reads a single byte value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$read_byte()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A single byte as an integer.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-read_int"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-read_int}{}}}
\subsection{Method \code{read_int()}}{
Reads a 4-byte integer value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$read_int(signed = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{signed}}{A logical indicating whether the integer is signed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-read_long"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-read_long}{}}}
\subsection{Method \code{read_long()}}{
Reads an 8-byte long integer value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$read_long(signed = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{signed}}{A logical indicating whether the integer is signed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A long integer value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-read_float"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-read_float}{}}}
\subsection{Method \code{read_float()}}{
Reads a 4-byte floating-point value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$read_float()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-read_double"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-read_double}{}}}
\subsection{Method \code{read_double()}}{
Reads an 8-byte floating-point value.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$read_double()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-read"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-read}{}}}
\subsection{Method \code{read()}}{
Reads a specified number of bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$read(length = -1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{length}}{An integer specifying the number of bytes to read.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector of the read bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-get_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-get_bytes}{}}}
\subsection{Method \code{get_bytes()}}{
Gets the byte array representing the current buffer as a whole.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$get_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A raw vector of the entire buffer.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-close"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-close}{}}}
\subsection{Method \code{close()}}{
Closes the reader, freeing the raw connection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-tell_position"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-tell_position}{}}}
\subsection{Method \code{tell_position()}}{
Tells the current position in the stream.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$tell_position()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
An integer representing the current position.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-set_position"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-set_position}{}}}
\subsection{Method \code{set_position()}}{
Sets the current position in the stream.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$set_position(position)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{position}}{An integer specifying the position to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-seek"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-seek}{}}}
\subsection{Method \code{seek()}}{
Seeks the stream position by a given offset.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$seek(offset)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{An integer specifying the offset to seek.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-bytes_to_int"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-bytes_to_int}{}}}
\subsection{Method \code{bytes_to_int()}}{
Converts a byte vector to an integer.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$bytes_to_int(bytes, signed = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bytes}}{A raw vector representing the bytes.}

\item{\code{signed}}{A logical indicating whether the integer is signed.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An integer value.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BinaryReader-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BinaryReader-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BinaryReader$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
