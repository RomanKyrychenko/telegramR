% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/requests.R
\name{InvokeWithGooglePlayIntegrityRequest}
\alias{InvokeWithGooglePlayIntegrityRequest}
\title{InvokeWithGooglePlayIntegrityRequest R6 class}
\description{
R6 class representing a request that wraps a nested `query` with Google
Play Integrity metadata. The class stores a `nonce` and `token` and
delegates serialization of the nested `query` to its `to_bytes()` method.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier.}

\item{\code{nonce}}{Character or raw nonce value.}

\item{\code{token}}{Character token value.}

\item{\code{query}}{Nested query object implementing `to_list` and `to_bytes`.
Initialize a new InvokeWithGooglePlayIntegrityRequest}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeWithGooglePlayIntegrityRequest-new}{\code{InvokeWithGooglePlayIntegrityRequest$new()}}
\item \href{#method-InvokeWithGooglePlayIntegrityRequest-to_list}{\code{InvokeWithGooglePlayIntegrityRequest$to_list()}}
\item \href{#method-InvokeWithGooglePlayIntegrityRequest-to_bytes}{\code{InvokeWithGooglePlayIntegrityRequest$to_bytes()}}
\item \href{#method-InvokeWithGooglePlayIntegrityRequest-clone}{\code{InvokeWithGooglePlayIntegrityRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithGooglePlayIntegrityRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithGooglePlayIntegrityRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithGooglePlayIntegrityRequest$new(nonce, token, query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nonce}}{Nonce value used for the request (character or raw).}

\item{\code{token}}{Google Play Integrity token string.}

\item{\code{query}}{Nested query object that responds to `to_list` and `to_bytes`.
Convert the request to a list

Produces a plain R list suitable for debugging or JSON serialization.
If `query` implements `to_list`, that representation will be used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithGooglePlayIntegrityRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithGooglePlayIntegrityRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithGooglePlayIntegrityRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with keys: `_`, `nonce`, `token`, and `query`.
Serialize the request to raw bytes

Serialization order:
 - constructor id (4 bytes, little-endian)
 - serialized `nonce`
 - serialized `token`
 - serialized nested `query` bytes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithGooglePlayIntegrityRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithGooglePlayIntegrityRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithGooglePlayIntegrityRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector containing the serialized bytes of the request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithGooglePlayIntegrityRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithGooglePlayIntegrityRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithGooglePlayIntegrityRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
