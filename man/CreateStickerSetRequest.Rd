% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_stickers.R
\name{CreateStickerSetRequest}
\alias{CreateStickerSetRequest}
\title{CreateStickerSetRequest R6 class}
\description{
CreateStickerSetRequest R6 class

CreateStickerSetRequest R6 class
}
\details{
Represents a request to create a sticker set.
}
\section{Methods}{

- initialize(user_id, title, short_name, stickers, masks = NULL, emojis = NULL, text_color = NULL, thumb = NULL, software = NULL): create instance.
- resolve(client, utils): resolve friendly references to TL inputs (documents / users).
- to_list(): returns a list representation suitable for inspection/JSON.
- to_bytes(): returns a raw vector representing serialized bytes (TL-like).
- from_reader(reader): static-style constructor that reads values from a reader object.

All methods are exported as part of the R6 object.
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{numeric constructor id (hex)}

\item{\code{SUBCLASS_OF_ID}}{numeric subclass id (hex)}

\item{\code{user_id}}{object InputUser (TL) — required}

\item{\code{title}}{character — required}

\item{\code{short_name}}{character — required}

\item{\code{stickers}}{list of InputStickerSetItem (TL) — required}

\item{\code{masks}}{logical — optional}

\item{\code{emojis}}{logical — optional}

\item{\code{text_color}}{logical — optional}

\item{\code{thumb}}{object InputDocument (TL) — optional}

\item{\code{software}}{character — optional}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CreateStickerSetRequest-new}{\code{CreateStickerSetRequest$new()}}
\item \href{#method-CreateStickerSetRequest-resolve}{\code{CreateStickerSetRequest$resolve()}}
\item \href{#method-CreateStickerSetRequest-to_list}{\code{CreateStickerSetRequest$to_list()}}
\item \href{#method-CreateStickerSetRequest-to_bytes}{\code{CreateStickerSetRequest$to_bytes()}}
\item \href{#method-CreateStickerSetRequest-from_reader}{\code{CreateStickerSetRequest$from_reader()}}
\item \href{#method-CreateStickerSetRequest-clone}{\code{CreateStickerSetRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateStickerSetRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-CreateStickerSetRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize a CreateStickerSetRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateStickerSetRequest$new(
  user_id,
  title,
  short_name,
  stickers,
  masks = NULL,
  emojis = NULL,
  text_color = NULL,
  thumb = NULL,
  software = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user_id}}{InputUser (TL object or representation)}

\item{\code{title}}{character Title string}

\item{\code{short_name}}{character Short name string}

\item{\code{stickers}}{list of InputStickerSetItem TL objects (or raw representations)}

\item{\code{masks}}{logical optional}

\item{\code{emojis}}{logical optional}

\item{\code{text_color}}{logical optional}

\item{\code{thumb}}{optional InputDocument TL object (or raw)}

\item{\code{software}}{optional character string}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateStickerSetRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-CreateStickerSetRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
Resolve friendly inputs to TL input objects
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateStickerSetRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{client object (used for entity resolution if needed)}

\item{\code{utils}}{utilities object with helper conversions (must implement get_input_user and get_input_document)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateStickerSetRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-CreateStickerSetRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
Convert to an R list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateStickerSetRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list representation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateStickerSetRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-CreateStickerSetRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
Serialize to raw bytes (TL-like approximation)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateStickerSetRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raw vector
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateStickerSetRequest-from_reader"></a>}}
\if{latex}{\out{\hypertarget{method-CreateStickerSetRequest-from_reader}{}}}
\subsection{Method \code{from_reader()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateStickerSetRequest$from_reader(reader)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateStickerSetRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CreateStickerSetRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateStickerSetRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
