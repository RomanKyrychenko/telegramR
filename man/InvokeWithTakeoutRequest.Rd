% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R, R/requests.R
\name{InvokeWithTakeoutRequest}
\alias{InvokeWithTakeoutRequest}
\title{InvokeWithTakeoutRequest R6 class}
\value{
An R6 object of class \code{InvokeWithTakeoutRequest}.
}
\description{
Represents the TL request `InvokeWithTakeoutRequest`.

R6 class representing a request that wraps a nested `query` with a takeout
identifier. The `takeout_id` is typically an integer64 identifying a user's
takeout/export session; `query` is a nested object that must implement
`to_list()` and `to_bytes()`.
}
\details{
Fields:
- takeout_id: numeric/integer (64-bit placeholder)
- query: TypeX (an object representing a TL query). May be an R6 TL object with to_raw()/to_list().

Methods:
- new(takeout_id, query): create new instance.
- to_list(): return an R list representation.
- to_raw(): serialize to raw vector (bytes) in little endian as used in TL.


to_raw() writes takeout_id as an 8-byte little-endian value using writeBin(as.numeric(...), size=8).
For exact two's-complement 64-bit preservation, replace with a dedicated 64-bit serializer.
Initialize an InvokeWithTakeoutRequest
}
\examples{
# q <- SomeQueryObject$new(...)
# req <- InvokeWithTakeoutRequest$new(takeout_id = 1234567890123456789, query = q)
Initialize a new InvokeWithTakeoutRequest

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeWithTakeoutRequest-new}{\code{InvokeWithTakeoutRequest$new()}}
\item \href{#method-InvokeWithTakeoutRequest-to_list}{\code{InvokeWithTakeoutRequest$to_list()}}
\item \href{#method-InvokeWithTakeoutRequest-to_bytes}{\code{InvokeWithTakeoutRequest$to_bytes()}}
\item \href{#method-InvokeWithTakeoutRequest-clone}{\code{InvokeWithTakeoutRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$new(takeout_id, query)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$to_bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier for this request type.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier.}

\item{\code{takeout_id}}{Integer64 takeout identifier.}

\item{\code{query}}{Nested query object implementing `to_list` and `to_bytes`.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeWithTakeoutRequest-new}{\code{InvokeWithTakeoutRequest$new()}}
\item \href{#method-InvokeWithTakeoutRequest-to_list}{\code{InvokeWithTakeoutRequest$to_list()}}
\item \href{#method-InvokeWithTakeoutRequest-to_bytes}{\code{InvokeWithTakeoutRequest$to_bytes()}}
\item \href{#method-InvokeWithTakeoutRequest-clone}{\code{InvokeWithTakeoutRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$new(takeout_id, query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{takeout_id}}{Integer64 identifier of the takeout session.}

\item{\code{query}}{Nested query object that responds to `to_list` and `to_bytes`.
Convert to list representation

Produces a plain R list suitable for debugging or JSON serialization.
If the nested `query` implements `to_list()`, that representation will be used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with keys: `_`, `takeout_id`, and `query`.
Serialize the request to raw bytes

Serialization order:
 - constructor id (4 bytes, little-endian)
 - `takeout_id` as 8-byte little-endian integer
 - serialized nested `query` bytes (via `query$to_bytes()`)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector containing the serialized bytes of the request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithTakeoutRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithTakeoutRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithTakeoutRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
