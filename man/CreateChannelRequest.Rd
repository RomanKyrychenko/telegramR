% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_channels.R
\name{CreateChannelRequest}
\alias{CreateChannelRequest}
\title{CreateChannelRequest}
\description{
Represents a request to create a new channel.
}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{CreateChannelRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{The constructor ID for this request.}

\item{\code{SUBCLASS_OF_ID}}{The subclass ID for this request.}

\item{\code{title}}{The title of the channel.}

\item{\code{about}}{The description of the channel.}

\item{\code{broadcast}}{Whether the channel is a broadcast channel.}

\item{\code{megagroup}}{Whether the channel is a megagroup.}

\item{\code{for_import}}{Whether the channel is for import.}

\item{\code{forum}}{Whether the channel is a forum.}

\item{\code{geo_point}}{The geo point for the channel.}

\item{\code{address}}{The address for the channel.}

\item{\code{ttl_period}}{The TTL period for the channel.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-CreateChannelRequest-new}{\code{CreateChannelRequest$new()}}
\item \href{#method-CreateChannelRequest-to_dict}{\code{CreateChannelRequest$to_dict()}}
\item \href{#method-CreateChannelRequest-bytes}{\code{CreateChannelRequest$bytes()}}
\item \href{#method-CreateChannelRequest-clone}{\code{CreateChannelRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="resolve"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-resolve'><code>telegramR::TLRequest$resolve()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateChannelRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-CreateChannelRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize the CreateChannelRequest.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateChannelRequest$new(
  title,
  about,
  broadcast = NULL,
  megagroup = NULL,
  for_import = NULL,
  forum = NULL,
  geo_point = NULL,
  address = NULL,
  ttl_period = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{The title of the channel.}

\item{\code{about}}{The description of the channel.}

\item{\code{broadcast}}{Whether the channel is a broadcast channel.}

\item{\code{megagroup}}{Whether the channel is a megagroup.}

\item{\code{for_import}}{Whether the channel is for import.}

\item{\code{forum}}{Whether the channel is a forum.}

\item{\code{geo_point}}{The geo point for the channel.}

\item{\code{address}}{The address for the channel.}

\item{\code{ttl_period}}{The TTL period for the channel.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateChannelRequest-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-CreateChannelRequest-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Convert the object to a dictionary.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateChannelRequest$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representing the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateChannelRequest-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-CreateChannelRequest-bytes}{}}}
\subsection{Method \code{bytes()}}{
Serialize the object to bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateChannelRequest$bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A raw vector of bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-CreateChannelRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-CreateChannelRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{CreateChannelRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
