% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R, R/requests.R
\name{InvokeAfterMsgRequest}
\alias{InvokeAfterMsgRequest}
\title{InvokeAfterMsgRequest R6 class}
\description{
Represents a request that will be invoked after a specific message ID.
Holds the target message identifier and a nested \code{query} object which
will be executed after the message with \code{msg_id}.
}
\details{
Represents the TL request `InvokeAfterMsgRequest`.

Fields:
- msg_id: numeric/integer (64-bit placeholder)
- query: TypeX (an object representing a TL query). May be an R6 TL object with to_raw()/to_list().

Methods:
- new(msg_id, query): create new instance.
- to_list(): return an R list representation.
- to_raw(): serialize to raw vector (bytes) in little endian as used in TL.


to_raw() writes the constructor id (0xcb9f372d) in little-endian (bytes: 0x2D 0x37 0x9F 0xCB),
then msg_id as 8-byte little-endian value, followed by nested query bytes.
Note: writeBin on numeric with size=8 uses IEEE754 double; for exact 64-bit two's-complement
preservation, replace with a dedicated 64-bit writer.
Initialize an InvokeAfterMsgRequest
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeAfterMsgRequest-new}{\code{InvokeAfterMsgRequest$new()}}
\item \href{#method-InvokeAfterMsgRequest-to_list}{\code{InvokeAfterMsgRequest$to_list()}}
\item \href{#method-InvokeAfterMsgRequest-to_bytes}{\code{InvokeAfterMsgRequest$to_bytes()}}
\item \href{#method-InvokeAfterMsgRequest-clone}{\code{InvokeAfterMsgRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$new(msg_id, query)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$to_bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier.}

\item{\code{msg_id}}{Integer64 message identifier after which the query will be invoked.}

\item{\code{query}}{Nested query object; must implement \code{to_list} and \code{to_bytes}.
Initialize a new InvokeAfterMsgRequest}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeAfterMsgRequest-new}{\code{InvokeAfterMsgRequest$new()}}
\item \href{#method-InvokeAfterMsgRequest-to_list}{\code{InvokeAfterMsgRequest$to_list()}}
\item \href{#method-InvokeAfterMsgRequest-to_bytes}{\code{InvokeAfterMsgRequest$to_bytes()}}
\item \href{#method-InvokeAfterMsgRequest-clone}{\code{InvokeAfterMsgRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$new(msg_id, query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{msg_id}}{Integer64 identifier of the message after which the query should run.}

\item{\code{query}}{Nested query object that responds to \code{to_list} and \code{to_bytes}.
Convert to list representation

Produces a plain R list suitable for JSON or debugging. If the nested
\code{query} responds to \code{to_list}, that representation will be used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with keys: \code{"_"}, \code{msg_id}, and \code{query}.
Serialize to raw bytes

Produces a raw vector containing:
- constructor id (4 bytes little-endian)
- \code{msg_id} as 8-byte little-endian integer
- serialized bytes of the nested \code{query} (via \code{query$to_bytes()})
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector with serialized request bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeAfterMsgRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeAfterMsgRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeAfterMsgRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
