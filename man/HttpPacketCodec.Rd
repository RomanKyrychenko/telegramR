% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/http.R
\name{HttpPacketCodec}
\alias{HttpPacketCodec}
\title{HTTP Packet Codec Class}
\description{
This class implements the HTTP packet codec for encoding and decoding packets.
}
\section{Super class}{
\code{\link[telegramR:PacketCodec]{telegramR::PacketCodec}} -> \code{HttpPacketCodec}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tag}}{A raw vector representing the tag for the codec.}

\item{\code{obfuscate_tag}}{A raw vector used for obfuscation.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-HttpPacketCodec-encode_packet}{\code{HttpPacketCodec$encode_packet()}}
\item \href{#method-HttpPacketCodec-read_packet}{\code{HttpPacketCodec$read_packet()}}
\item \href{#method-HttpPacketCodec-clone}{\code{HttpPacketCodec$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="PacketCodec" data-id="initialize"><a href='../../telegramR/html/PacketCodec.html#method-PacketCodec-initialize'><code>telegramR::PacketCodec$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HttpPacketCodec-encode_packet"></a>}}
\if{latex}{\out{\hypertarget{method-HttpPacketCodec-encode_packet}{}}}
\subsection{Method \code{encode_packet()}}{
Encode a packet using HTTP format.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HttpPacketCodec$encode_packet(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A raw vector containing the data to encode.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector representing the full HTTP packet.
Asynchronously read an HTTP packet.

This method repeatedly reads lines until a line beginning with "content-length: " is found,
then reads exactly the specified number of bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HttpPacketCodec-read_packet"></a>}}
\if{latex}{\out{\hypertarget{method-HttpPacketCodec-read_packet}{}}}
\subsection{Method \code{read_packet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HttpPacketCodec$read_packet(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{An object providing the methods \code{readline()} and \code{readexactly(n)}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A future resolving to a raw vector containing the packet data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HttpPacketCodec-clone"></a>}}
\if{latex}{\out{\hypertarget{method-HttpPacketCodec-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{HttpPacketCodec$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
