% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_auth.R
\name{BindTempAuthKeyRequest}
\alias{BindTempAuthKeyRequest}
\title{BindTempAuthKeyRequest R6 class}
\description{
Represents the TLRequest auth.BindTempAuthKeyRequest.
}
\details{
Fields:
}
\section{initialize}{

 Create a new BindTempAuthKeyRequest object.
 @param perm_auth_key_id numeric or integer (64-bit)
 @param nonce numeric or integer (64-bit)
 @param expires_at POSIXct|Date or NULL
 @param encrypted_message raw vector or string
 @return invisible self
}

\section{to_list}{

 Return a pure R list representation of the object.
 @return list
}

\section{to_bytes}{

 Serialize the object into raw bytes for TL.
 @return raw vector
}

\section{from_reader}{

 Read fields from a reader and return a new BindTempAuthKeyRequest.
 @param reader Reader object implementing read_long(), tgread_date(), tgread_bytes()
 @return BindTempAuthKeyRequest instance
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{integer Constructor id (hex 0xcdd42a05).}

\item{\code{SUBCLASS_OF_ID}}{integer Subclass id (hex 0xf5b399ac).}

\item{\code{perm_auth_key_id}}{numeric 64-bit id.}

\item{\code{nonce}}{numeric 64-bit nonce.}

\item{\code{expires_at}}{POSIXct|Date Optional expiration datetime.}

\item{\code{encrypted_message}}{raw|character Encrypted message bytes.

Methods:}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BindTempAuthKeyRequest-new}{\code{BindTempAuthKeyRequest$new()}}
\item \href{#method-BindTempAuthKeyRequest-to_list}{\code{BindTempAuthKeyRequest$to_list()}}
\item \href{#method-BindTempAuthKeyRequest-to_bytes}{\code{BindTempAuthKeyRequest$to_bytes()}}
\item \href{#method-BindTempAuthKeyRequest-from_reader}{\code{BindTempAuthKeyRequest$from_reader()}}
\item \href{#method-BindTempAuthKeyRequest-clone}{\code{BindTempAuthKeyRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BindTempAuthKeyRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-BindTempAuthKeyRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BindTempAuthKeyRequest$new(
  perm_auth_key_id,
  nonce,
  expires_at = NULL,
  encrypted_message
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{perm_auth_key_id}}{numeric or integer (64-bit)}

\item{\code{nonce}}{numeric or integer (64-bit)}

\item{\code{expires_at}}{POSIXct|Date or NULL}

\item{\code{encrypted_message}}{raw vector or string
Convert to an R list (similar to to_dict)}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BindTempAuthKeyRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-BindTempAuthKeyRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BindTempAuthKeyRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list
Serialize to bytes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BindTempAuthKeyRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-BindTempAuthKeyRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BindTempAuthKeyRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raw vector
Read from reader and create BindTempAuthKeyRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BindTempAuthKeyRequest-from_reader"></a>}}
\if{latex}{\out{\hypertarget{method-BindTempAuthKeyRequest-from_reader}{}}}
\subsection{Method \code{from_reader()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BindTempAuthKeyRequest$from_reader(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{Reader object implementing read_long(), tgread_date(), tgread_bytes()}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
BindTempAuthKeyRequest instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BindTempAuthKeyRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BindTempAuthKeyRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BindTempAuthKeyRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
