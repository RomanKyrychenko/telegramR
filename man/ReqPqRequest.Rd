% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/requests.R
\name{ReqPqRequest}
\alias{ReqPqRequest}
\title{ReqPqRequest R6 class}
\description{
Represents a request for the server's PQ (prime factor) during the initial
key exchange. Holds a 128-bit `nonce` generated by the client.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier.}

\item{\code{nonce}}{128-bit nonce (large int or raw).
Initialize a new ReqPqRequest}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ReqPqRequest-new}{\code{ReqPqRequest$new()}}
\item \href{#method-ReqPqRequest-to_list}{\code{ReqPqRequest$to_list()}}
\item \href{#method-ReqPqRequest-to_bytes}{\code{ReqPqRequest$to_bytes()}}
\item \href{#method-ReqPqRequest-clone}{\code{ReqPqRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqRequest$new(nonce)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nonce}}{128-bit nonce generated by the client (large int or raw).
Convert to list representation

Returns a plain R list representation useful for debugging or JSON-like
inspection. The list includes the class discriminator and the `nonce`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named list with keys `"_`" and `nonce`.
Serialize to raw bytes

Serializes the request according to the protocol:
- constructor id (4 bytes, little-endian)
- `nonce` as a 128-bit (16-byte) little-endian value
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector containing the serialized request bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ReqPqRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ReqPqRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ReqPqRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
