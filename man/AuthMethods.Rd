% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth.R
\name{AuthMethods}
\alias{AuthMethods}
\title{Authentication Methods}
\description{
Provides methods for user authentication with Telegram
}
\details{
This class handles all authentication-related operations including login, logout, two-factor authentication,
and code verification. It implements session management and authorization workflows for the Telegram API.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AuthMethods-start}{\code{AuthMethods$start()}}
\item \href{#method-AuthMethods-sign_in}{\code{AuthMethods$sign_in()}}
\item \href{#method-AuthMethods-sign_up}{\code{AuthMethods$sign_up()}}
\item \href{#method-AuthMethods-send_code_request}{\code{AuthMethods$send_code_request()}}
\item \href{#method-AuthMethods-qr_login}{\code{AuthMethods$qr_login()}}
\item \href{#method-AuthMethods-log_out}{\code{AuthMethods$log_out()}}
\item \href{#method-AuthMethods-edit_2fa}{\code{AuthMethods$edit_2fa()}}
\item \href{#method-AuthMethods-clone}{\code{AuthMethods$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-start"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-start}{}}}
\subsection{Method \code{start()}}{
Starts the client (connects and logs in if necessary).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$start(
  phone = function() readline("Please enter your phone (or bot token): "),
  password = function() getPass::getPass("Please enter your password: "),
  bot_token = NULL,
  force_sms = FALSE,
  code_callback = NULL,
  first_name = "New User",
  last_name = "",
  max_attempts = 3
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phone}}{Function or string representing the phone number or bot token}

\item{\code{password}}{Function or string to provide 2FA password if needed}

\item{\code{bot_token}}{Bot token for logging in as a bot}

\item{\code{force_sms}}{Whether to force sending the code request as SMS}

\item{\code{code_callback}}{Function to retrieve login code}

\item{\code{first_name}}{First name for new accounts}

\item{\code{last_name}}{Last name for new accounts}

\item{\code{max_attempts}}{Maximum number of attempts for code/password verification}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The client instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-sign_in"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-sign_in}{}}}
\subsection{Method \code{sign_in()}}{
Signs in to an existing user or bot account.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$sign_in(
  phone = NULL,
  code = NULL,
  password = NULL,
  bot_token = NULL,
  phone_code_hash = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phone}}{Phone number}

\item{\code{code}}{The verification code sent by Telegram}

\item{\code{password}}{2FA password if enabled}

\item{\code{bot_token}}{Bot token for logging in as a bot}

\item{\code{phone_code_hash}}{Hash returned by send_code_request}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The signed in user or information about send_code_request
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-sign_up"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-sign_up}{}}}
\subsection{Method \code{sign_up()}}{
This method can no longer be used due to Telegram's restrictions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$sign_up(
  code,
  first_name,
  last_name = "",
  phone = NULL,
  phone_code_hash = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{code}}{The verification code}

\item{\code{first_name}}{First name for the new user}

\item{\code{last_name}}{Last name for the new user}

\item{\code{phone}}{Phone number}

\item{\code{phone_code_hash}}{Hash returned by send_code_request}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-send_code_request"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-send_code_request}{}}}
\subsection{Method \code{send_code_request()}}{
Sends the verification code to the given phone number
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$send_code_request(phone, force_sms = FALSE, retry_count = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phone}}{Phone number to send the code to}

\item{\code{force_sms}}{Whether to force sending as SMS}

\item{\code{retry_count}}{Internal parameter for recursion, do not set}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The sent code information
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-qr_login"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-qr_login}{}}}
\subsection{Method \code{qr_login()}}{
Initiates the QR login procedure
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$qr_login(ignored_ids = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ignored_ids}}{List of already logged-in user IDs}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
QR login object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-log_out"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-log_out}{}}}
\subsection{Method \code{log_out()}}{
Logs out of Telegram and deletes the current session file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$log_out()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if successful, FALSE otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-edit_2fa"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-edit_2fa}{}}}
\subsection{Method \code{edit_2fa()}}{
Changes the 2FA settings of the logged in user
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$edit_2fa(
  current_password = NULL,
  new_password = NULL,
  hint = "",
  email = NULL,
  email_code_callback = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{current_password}}{Current password}

\item{\code{new_password}}{New password to set}

\item{\code{hint}}{Hint to display when prompting for 2FA}

\item{\code{email}}{Recovery email address}

\item{\code{email_code_callback}}{Function to retrieve email verification code}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if successful, FALSE otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AuthMethods-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AuthMethods-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AuthMethods$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
