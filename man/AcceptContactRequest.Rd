% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_contacts.R
\name{AcceptContactRequest}
\alias{AcceptContactRequest}
\title{AcceptContactRequest}
\description{
Methods:
- initialize(id): create new request
- resolve(client, utils): resolve id into input_user using client and utils
- to_list(): return a list representation suitable for JSON/dumping
- to_bytes(): return raw vector of bytes for the TL request
- from_reader(reader): read from reader and return new instance
}
\details{
R6 representation of the TL request: AcceptContactRequest
}
\examples{
AcceptContactRequest$new(inputUserObj)$to_list()
Initialize AcceptContactRequest

}
\section{Super classes}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{\link[telegramR:TLRequest]{telegramR::TLRequest}} -> \code{AcceptContactRequest}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{integer Constructor id (hex)}

\item{\code{SUBCLASS_OF_ID}}{integer Subclass id (hex)}

\item{\code{id}}{TLObject Input user object (will be resolved with utils)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AcceptContactRequest-new}{\code{AcceptContactRequest$new()}}
\item \href{#method-AcceptContactRequest-resolve}{\code{AcceptContactRequest$resolve()}}
\item \href{#method-AcceptContactRequest-to_list}{\code{AcceptContactRequest$to_list()}}
\item \href{#method-AcceptContactRequest-to_bytes}{\code{AcceptContactRequest$to_bytes()}}
\item \href{#method-AcceptContactRequest-clone}{\code{AcceptContactRequest$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_dict"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_dict'><code>telegramR::TLObject$to_dict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLRequest" data-id="read_result"><a href='../../telegramR/html/TLRequest.html#method-TLRequest-read_result'><code>telegramR::TLRequest$read_result()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AcceptContactRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-AcceptContactRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AcceptContactRequest$new(id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{input user object or identifier
Resolve entities using client and utils

Replaces `id` with utils$get_input_user(client$get_input_entity(id))}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AcceptContactRequest-resolve"></a>}}
\if{latex}{\out{\hypertarget{method-AcceptContactRequest-resolve}{}}}
\subsection{Method \code{resolve()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AcceptContactRequest$resolve(client, utils)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{client object with method get_input_entity()}

\item{\code{utils}}{utils object with method get_input_user()
Convert to list}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AcceptContactRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-AcceptContactRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AcceptContactRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
list
Serialize to bytes (raw vector)
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AcceptContactRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-AcceptContactRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AcceptContactRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
raw
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AcceptContactRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AcceptContactRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AcceptContactRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
