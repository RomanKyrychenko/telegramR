% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abstract.R
\name{Session}
\alias{Session}
\title{R6 Class Representing a Session}
\description{
Represents an abstract base class for managing session-related data.
}
\details{
This class defines the interface for session management, including
methods for handling data center information, authentication keys,
update states, and file caching.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Session-new}{\code{Session$new()}}
\item \href{#method-Session-.clone}{\code{Session$.clone()}}
\item \href{#method-Session-set_dc}{\code{Session$set_dc()}}
\item \href{#method-Session-get_update_state}{\code{Session$get_update_state()}}
\item \href{#method-Session-set_update_state}{\code{Session$set_update_state()}}
\item \href{#method-Session-get_update_states}{\code{Session$get_update_states()}}
\item \href{#method-Session-close}{\code{Session$close()}}
\item \href{#method-Session-save}{\code{Session$save()}}
\item \href{#method-Session-delete}{\code{Session$delete()}}
\item \href{#method-Session-process_entities}{\code{Session$process_entities()}}
\item \href{#method-Session-get_input_entity}{\code{Session$get_input_entity()}}
\item \href{#method-Session-cache_file}{\code{Session$cache_file()}}
\item \href{#method-Session-get_file}{\code{Session$get_file()}}
\item \href{#method-Session-clone}{\code{Session$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-new"></a>}}
\if{latex}{\out{\hypertarget{method-Session-new}{}}}
\subsection{Method \code{new()}}{
Constructor for the Session class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-.clone"></a>}}
\if{latex}{\out{\hypertarget{method-Session-.clone}{}}}
\subsection{Method \code{.clone()}}{
Creates a clone of this session object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$.clone(to_instance = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{to_instance}}{An optional instance to clone into.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A cloned session object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-set_dc"></a>}}
\if{latex}{\out{\hypertarget{method-Session-set_dc}{}}}
\subsection{Method \code{set_dc()}}{
Sets the data center information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$set_dc(dc_id, server_address, port)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dc_id}}{\code{numeric} The data center ID.}

\item{\code{server_address}}{\code{character} The server address.}

\item{\code{port}}{\code{numeric} The port number.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-get_update_state"></a>}}
\if{latex}{\out{\hypertarget{method-Session-get_update_state}{}}}
\subsection{Method \code{get_update_state()}}{
Retrieves the update state for a given entity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$get_update_state(entity_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity_id}}{\code{numeric} The ID of the entity.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{ANY} The update state or NULL if unknown.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-set_update_state"></a>}}
\if{latex}{\out{\hypertarget{method-Session-set_update_state}{}}}
\subsection{Method \code{set_update_state()}}{
Sets the update state for a given entity.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$set_update_state(entity_id, state)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity_id}}{\code{numeric} The ID of the entity.}

\item{\code{state}}{\code{ANY} The update state to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-get_update_states"></a>}}
\if{latex}{\out{\hypertarget{method-Session-get_update_states}{}}}
\subsection{Method \code{get_update_states()}}{
Retrieves all known update states.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$get_update_states()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{list} A list of entity ID and update state pairs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-close"></a>}}
\if{latex}{\out{\hypertarget{method-Session-close}{}}}
\subsection{Method \code{close()}}{
Frees any used resources upon disconnection.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$close()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-save"></a>}}
\if{latex}{\out{\hypertarget{method-Session-save}{}}}
\subsection{Method \code{save()}}{
Persists session information to disk.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$save()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-delete"></a>}}
\if{latex}{\out{\hypertarget{method-Session-delete}{}}}
\subsection{Method \code{delete()}}{
Deletes the session information from disk.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$delete()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-process_entities"></a>}}
\if{latex}{\out{\hypertarget{method-Session-process_entities}{}}}
\subsection{Method \code{process_entities()}}{
Processes and saves relevant information from a TLObject.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$process_entities(tlo)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tlo}}{\code{ANY} The TLObject or list to process.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-get_input_entity"></a>}}
\if{latex}{\out{\hypertarget{method-Session-get_input_entity}{}}}
\subsection{Method \code{get_input_entity()}}{
Converts a key into an InputPeer.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$get_input_entity(key)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{key}}{\code{ANY} The key to convert.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{ANY} The corresponding InputPeer.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-cache_file"></a>}}
\if{latex}{\out{\hypertarget{method-Session-cache_file}{}}}
\subsection{Method \code{cache_file()}}{
Caches file information persistently.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$cache_file(md5_digest, file_size, instance)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{md5_digest}}{\code{character} The MD5 digest of the file.}

\item{\code{file_size}}{\code{numeric} The size of the file.}

\item{\code{instance}}{\code{ANY} The file instance to cache.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-get_file"></a>}}
\if{latex}{\out{\hypertarget{method-Session-get_file}{}}}
\subsection{Method \code{get_file()}}{
Retrieves cached file information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$get_file(md5_digest, file_size, cls)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{md5_digest}}{\code{character} The MD5 digest of the file.}

\item{\code{file_size}}{\code{numeric} The size of the file.}

\item{\code{cls}}{\code{ANY} The class of the file to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{ANY} The cached file instance or NULL if not found.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Session-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Session-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Session$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
