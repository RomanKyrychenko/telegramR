% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tlobject.R
\name{ClientDHInnerData}
\alias{ClientDHInnerData}
\title{ClientDHInnerData Class}
\description{
A class representing the `ClientDHInnerData` object. This class is used to handle
the serialization and deserialization of the `ClientDHInnerData` object.
}
\section{Super class}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{ClientDHInnerData}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{A unique identifier for the TL object.}

\item{\code{SUBCLASS_OF_ID}}{A unique identifier for the subclass of the TL object.}

\item{\code{nonce}}{The `nonce` value as an integer.}

\item{\code{server_nonce}}{The `server_nonce` value as an integer.}

\item{\code{retry_id}}{The `retry_id` value as an integer.}

\item{\code{g_b}}{The `g_b` value as a raw vector.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ClientDHInnerData-new}{\code{ClientDHInnerData$new()}}
\item \href{#method-ClientDHInnerData-to_list}{\code{ClientDHInnerData$to_list()}}
\item \href{#method-ClientDHInnerData-bytes}{\code{ClientDHInnerData$bytes()}}
\item \href{#method-ClientDHInnerData-clone}{\code{ClientDHInnerData$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_dict"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_dict'><code>telegramR::TLObject$to_dict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientDHInnerData-new"></a>}}
\if{latex}{\out{\hypertarget{method-ClientDHInnerData-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientDHInnerData$new(nonce, server_nonce, retry_id, g_b)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientDHInnerData-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-ClientDHInnerData-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientDHInnerData$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientDHInnerData-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-ClientDHInnerData-bytes}{}}}
\subsection{Method \code{bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientDHInnerData$bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientDHInnerData-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ClientDHInnerData-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientDHInnerData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
