% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R, R/requests.R
\name{InvokeWithApnsSecretRequest}
\alias{InvokeWithApnsSecretRequest}
\title{InvokeWithApnsSecretRequest R6 class}
\description{
Represents the TL request `InvokeWithApnsSecretRequest`.

R6 class representing a request that wraps a nested `query` and provides
Apple Push Notification Service (APNS) secret/nonce metadata. The nested
`query` will be serialized after the `nonce` and `secret`.
}
\details{
Fields:
- nonce: character string
- secret: character string
- query: TypeX (an object representing a TL query). May be an R6 TL object with to_raw()/to_list().

Methods:
- new(nonce, secret, query): create new instance.
- to_list(): return an R list representation.
- to_raw(): serialize to raw vector (bytes) in little endian as used in TL.


to_raw() writes constructor id 0x0dae54f8 (little-endian bytes: 0xf8 0x54 0xae 0x0d),
then nonce and secret as TL strings (here serialized via charToRaw for simplicity),
then nested query bytes.
Initialize an InvokeWithApnsSecretRequest
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeWithApnsSecretRequest-new}{\code{InvokeWithApnsSecretRequest$new()}}
\item \href{#method-InvokeWithApnsSecretRequest-to_list}{\code{InvokeWithApnsSecretRequest$to_list()}}
\item \href{#method-InvokeWithApnsSecretRequest-to_bytes}{\code{InvokeWithApnsSecretRequest$to_bytes()}}
\item \href{#method-InvokeWithApnsSecretRequest-clone}{\code{InvokeWithApnsSecretRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$new(nonce, secret, query)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$to_list()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$to_bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{Integer constructor identifier.}

\item{\code{SUBCLASS_OF_ID}}{Integer subclass identifier.}

\item{\code{nonce}}{Character or raw nonce value.}

\item{\code{secret}}{Character APNS secret value.}

\item{\code{query}}{Nested query object that must implement `to_list` and `to_bytes`.
Initialize a new InvokeWithApnsSecretRequest}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvokeWithApnsSecretRequest-new}{\code{InvokeWithApnsSecretRequest$new()}}
\item \href{#method-InvokeWithApnsSecretRequest-to_list}{\code{InvokeWithApnsSecretRequest$to_list()}}
\item \href{#method-InvokeWithApnsSecretRequest-to_bytes}{\code{InvokeWithApnsSecretRequest$to_bytes()}}
\item \href{#method-InvokeWithApnsSecretRequest-clone}{\code{InvokeWithApnsSecretRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$new(nonce, secret, query)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nonce}}{Nonce value used for the request (character or raw).}

\item{\code{secret}}{APNS secret string associated with the request.}

\item{\code{query}}{Nested query object that responds to `to_list` and `to_bytes`.
Convert the request to a list

Produces a plain R list representation suitable for debugging or JSON
serialization. If the nested `query` implements `to_list`, its
list representation will be used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-to_list"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-to_list}{}}}
\subsection{Method \code{to_list()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$to_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List with keys `_`, `nonce`, `secret`, and `query`.
Serialize the request to raw bytes

The serialization order is:
 - constructor id (4 bytes, little-endian)
 - serialized `nonce`
 - serialized `secret`
 - serialized nested `query` bytes
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-to_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-to_bytes}{}}}
\subsection{Method \code{to_bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$to_bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Raw vector containing the serialized bytes of the request.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvokeWithApnsSecretRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvokeWithApnsSecretRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvokeWithApnsSecretRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
