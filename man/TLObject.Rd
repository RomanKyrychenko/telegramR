% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tlobject.R
\name{TLObject}
\alias{TLObject}
\title{TLObject Class}
\description{
A base class for all Telegram Layer (TL) objects. This class provides common methods
for serialization, deserialization, and representation of TL objects.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{A unique identifier for the TL object.}

\item{\code{SUBCLASS_OF_ID}}{A unique identifier for the subclass of the TL object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TLObject-new}{\code{TLObject$new()}}
\item \href{#method-TLObject-pretty_format}{\code{TLObject$pretty_format()}}
\item \href{#method-TLObject-serialize_bytes}{\code{TLObject$serialize_bytes()}}
\item \href{#method-TLObject-serialize_datetime}{\code{TLObject$serialize_datetime()}}
\item \href{#method-TLObject-to_dict}{\code{TLObject$to_dict()}}
\item \href{#method-TLObject-to_json}{\code{TLObject$to_json()}}
\item \href{#method-TLObject-.bytes}{\code{TLObject$.bytes()}}
\item \href{#method-TLObject-from_reader}{\code{TLObject$from_reader()}}
\item \href{#method-TLObject-.eq}{\code{TLObject$.eq()}}
\item \href{#method-TLObject-.ne}{\code{TLObject$.ne()}}
\item \href{#method-TLObject-.str}{\code{TLObject$.str()}}
\item \href{#method-TLObject-stringify}{\code{TLObject$stringify()}}
\item \href{#method-TLObject-clone}{\code{TLObject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-new"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TLObject.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new TLObject instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-pretty_format"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-pretty_format}{}}}
\subsection{Method \code{pretty_format()}}{
Pretty format the object for display.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$pretty_format(obj, indent = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{obj}}{The object to be formatted.}

\item{\code{indent}}{The current indentation level (used for recursive calls).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string representing the formatted object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-serialize_bytes"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-serialize_bytes}{}}}
\subsection{Method \code{serialize_bytes()}}{
Serialize data to bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$serialize_bytes(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{The data to be serialized.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector representing the serialized data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-serialize_datetime"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-serialize_datetime}{}}}
\subsection{Method \code{serialize_datetime()}}{
Serialize a datetime object to bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$serialize_datetime(dt)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dt}}{The datetime object to be serialized.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector representing the serialized datetime.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Convert the object to a dictionary representation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list representing the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-to_json"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-to_json}{}}}
\subsection{Method \code{to_json()}}{
Convert the object to a JSON representation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$to_json(fp = NULL, default = json_default, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fp}}{A file path to write the JSON to (optional).}

\item{\code{default}}{A function to handle custom serialization (default: json_default).}

\item{\code{...}}{Additional arguments to pass to the JSON serialization function.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character string representing the JSON representation of the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-.bytes"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-.bytes}{}}}
\subsection{Method \code{.bytes()}}{
Convert the object to a byte array.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$.bytes()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A raw vector representing the byte array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-from_reader"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-from_reader}{}}}
\subsection{Method \code{from_reader()}}{
Create a new object from a binary reader.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$from_reader(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{A binary reader object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new object created from the binary reader.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-.eq"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-.eq}{}}}
\subsection{Method \code{.eq()}}{
Check if the object is equal to another object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$.eq(o)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{o}}{The object to compare with.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical value indicating whether the objects are equal.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-.ne"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-.ne}{}}}
\subsection{Method \code{.ne()}}{
Check if the object is not equal to another object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$.ne(o)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{o}}{The object to compare with.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A logical value indicating whether the objects are not equal.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-.str"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-.str}{}}}
\subsection{Method \code{.str()}}{
Convert the object to a string representation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$.str()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character string representing the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-stringify"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-stringify}{}}}
\subsection{Method \code{stringify()}}{
Convert the object to a JSON string representation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$stringify()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character string representing the JSON representation of the object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TLObject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TLObject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TLObject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
