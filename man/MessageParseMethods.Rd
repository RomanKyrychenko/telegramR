% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/messageparse.R
\name{MessageParseMethods}
\alias{MessageParseMethods}
\title{MessageParseMethods Class}
\description{
A class for parsing messages in Telegram API.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{parse_mode}}{The default parse mode for parsing messages.
Initialize the MessageParseMethods class with a default parse mode.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MessageParseMethods-new}{\code{MessageParseMethods$new()}}
\item \href{#method-MessageParseMethods-set_parse_mode}{\code{MessageParseMethods$set_parse_mode()}}
\item \href{#method-MessageParseMethods-get_parse_mode}{\code{MessageParseMethods$get_parse_mode()}}
\item \href{#method-MessageParseMethods-sanitize_parse_mode}{\code{MessageParseMethods$sanitize_parse_mode()}}
\item \href{#method-MessageParseMethods-parse_message_text}{\code{MessageParseMethods$parse_message_text()}}
\item \href{#method-MessageParseMethods-replace_with_mention}{\code{MessageParseMethods$replace_with_mention()}}
\item \href{#method-MessageParseMethods-get_response_message}{\code{MessageParseMethods$get_response_message()}}
\item \href{#method-MessageParseMethods-clone}{\code{MessageParseMethods$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-new"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$new(parse_mode = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parse_mode}}{The default parse mode (e.g., "markdown", "html").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new MessageParseMethods object.
Set the default parse mode.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-set_parse_mode"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-set_parse_mode}{}}}
\subsection{Method \code{set_parse_mode()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$set_parse_mode(mode)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mode}}{The parse mode to set (e.g., "markdown", "html").}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
None.
Get the current parse mode.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-get_parse_mode"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-get_parse_mode}{}}}
\subsection{Method \code{get_parse_mode()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$get_parse_mode()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The current parse mode.
Sanitize the parse mode input.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-sanitize_parse_mode"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-sanitize_parse_mode}{}}}
\subsection{Method \code{sanitize_parse_mode()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$sanitize_parse_mode(mode)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mode}}{The parse mode to sanitize.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Sanitized parse mode.
Parse a message text based on the parse mode.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-parse_message_text"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-parse_message_text}{}}}
\subsection{Method \code{parse_message_text()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$parse_message_text(message, parse_mode = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{message}}{The message text to parse.}

\item{\code{parse_mode}}{The parse mode to use (optional).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list with parsed message and entities.
Replace an entity with a mention of a user.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-replace_with_mention"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-replace_with_mention}{}}}
\subsection{Method \code{replace_with_mention()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$replace_with_mention(entities, i, user)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entities}}{The list of entities.}

\item{\code{i}}{The index of the entity to replace.}

\item{\code{user}}{The user to mention.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if replaced successfully, FALSE otherwise.
Extract the response message based on the request and result.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-get_response_message"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-get_response_message}{}}}
\subsection{Method \code{get_response_message()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$get_response_message(request, result, input_chat)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{request}}{The original request.}

\item{\code{result}}{The result from the API.}

\item{\code{input_chat}}{The input chat entity.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The response message or NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MessageParseMethods-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MessageParseMethods-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MessageParseMethods$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
