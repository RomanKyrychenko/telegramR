% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tlobject.R, R/types.R
\name{PQInnerData}
\alias{PQInnerData}
\title{PQInnerData Class}
\description{
A class representing the `PQInnerData` object. This class is used to handle
the serialization and deserialization of the `PQInnerData` object.

This class has 4 constructors:
- \code{\link{PQInnerData}()}
- \code{\link{PQInnerDataDc}()}
- \code{\link{PQInnerDataTemp}()}
- \code{\link{PQInnerDataTempDc}()}
}
\section{Super class}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{PQInnerData}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{CONSTRUCTOR_ID}}{A unique identifier for the TL object.}

\item{\code{SUBCLASS_OF_ID}}{A unique identifier for the subclass of the TL object.}

\item{\code{pq}}{The `pq` value as a raw vector.}

\item{\code{p}}{The `p` value as a raw vector.}

\item{\code{q}}{The `q` value as a raw vector.}

\item{\code{nonce}}{The `nonce` value as an integer.}

\item{\code{server_nonce}}{The `server_nonce` value as an integer.}

\item{\code{new_nonce}}{The `new_nonce` value as an integer.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PQInnerData-new}{\code{PQInnerData$new()}}
\item \href{#method-PQInnerData-to_dict}{\code{PQInnerData$to_dict()}}
\item \href{#method-PQInnerData-bytes}{\code{PQInnerData$bytes()}}
\item \href{#method-PQInnerData-clone}{\code{PQInnerData$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-new"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$new(pq, p, q, nonce, server_nonce, new_nonce)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$to_dict()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-bytes}{}}}
\subsection{Method \code{bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
\section{Super class}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{PQInnerData}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{pq}}{raw \cr
pq
@field p raw \cr
p
@field q raw \cr
q
@field nonce raw \cr
nonce
@field server_nonce raw \cr
server_nonce
@field new_nonce raw \cr
new_nonce
@field dc integer \cr
dc
@field expires_in integer \cr
expires_in
@field slot integer \cr
slot
@field date integer \cr
date
@field expires integer \cr
expires
@field peer TLObject \cr
peer
@field cooldown_until_date integer \cr
cooldown_until_date}

\item{\code{CONSTRUCTOR_ID}}{Integer. Constructor ID of the class.}

\item{\code{SUBCLASS_OF_ID}}{Integer. Subclass of ID of the parent class.}

\item{\code{pq}}{Integer. Subclass of ID of the parent class.}

\item{\code{peer}}{Object. Peer where the story is from.}

\item{\code{id}}{Integer. Story ID.}

\item{\code{via_mention}}{Logical. Whether the story was sent via mention.}

\item{\code{story}}{Object. Story object.}

\item{\code{new_nonce}}{Logical. New nonce for the story.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{peer}}{Object. Peer where the story is from.}

\item{\code{id}}{Integer. Story ID.}

\item{\code{via_mention}}{Logical. Whether the story was sent via mention.}

\item{\code{story}}{Object. Story object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PQInnerData-new}{\code{PQInnerData$new()}}
\item \href{#method-PQInnerData-to_dict}{\code{PQInnerData$to_dict()}}
\item \href{#method-PQInnerData-bytes}{\code{PQInnerData$bytes()}}
\item \href{#method-PQInnerData-clone}{\code{PQInnerData$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="from_reader"><a href='../../telegramR/html/TLObject.html#method-TLObject-from_reader'><code>telegramR::TLObject$from_reader()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-new"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$new(pq, p, q, nonce, server_nonce, new_nonce)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$to_dict()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-bytes"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-bytes}{}}}
\subsection{Method \code{bytes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$bytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PQInnerData-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PQInnerData-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PQInnerData$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
