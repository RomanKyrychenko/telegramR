% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/messages.R
\name{IDsIter}
\alias{IDsIter}
\title{IDsIter R6 class}
\description{
IDsIter R6 class

IDsIter R6 class
}
\details{
Iterator over explicit message IDs, fetching results in chunks.
It optionally validates that returned messages belong to a given entity.
}
\section{Initialization}{

it <- IDsIter$new(client, entity = NULL, ids, reverse = FALSE, wait_time = NULL, limit = Inf)
}

\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-IDsIter-new}{\code{IDsIter$new()}}
\item \href{#method-IDsIter-load_next_chunk}{\code{IDsIter$load_next_chunk()}}
\item \href{#method-IDsIter-has_next}{\code{IDsIter$has_next()}}
\item \href{#method-IDsIter-.next}{\code{IDsIter$.next()}}
\item \href{#method-IDsIter-clone}{\code{IDsIter$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IDsIter-new"></a>}}
\if{latex}{\out{\hypertarget{method-IDsIter-new}{}}}
\subsection{Method \code{new()}}{
Initialize the iterator
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IDsIter$new(
  client,
  entity = NULL,
  ids,
  reverse = FALSE,
  wait_time = NULL,
  limit = Inf
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{Telegram client object.}

\item{\code{entity}}{Optional entity to validate messages against (can be NULL).}

\item{\code{ids}}{Integer vector of message IDs to fetch.}

\item{\code{reverse}}{logical. If TRUE, process ids in reverse order.}

\item{\code{wait_time}}{numeric or NULL. If NULL, set heuristically based on limit.}

\item{\code{limit}}{integer or Inf. Used only for wait_time heuristic here.
Load the next chunk of results into the buffer

Fetches up to the internal chunk size worth of messages for the next slice of ids.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IDsIter-load_next_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-IDsIter-load_next_chunk}{}}}
\subsection{Method \code{load_next_chunk()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IDsIter$load_next_chunk()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of messages or NULLs aligned with the requested chunk of ids;
        NULL if there are no more ids to process.
Check if there are more items to retrieve
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IDsIter-has_next"></a>}}
\if{latex}{\out{\hypertarget{method-IDsIter-has_next}{}}}
\subsection{Method \code{has_next()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IDsIter$has_next()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
logical indicating whether there are more items to fetch or buffered.
Get the next item, fetching more if needed
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IDsIter-.next"></a>}}
\if{latex}{\out{\hypertarget{method-IDsIter-.next}{}}}
\subsection{Method \code{.next()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IDsIter$.next()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A single message object or NULL if exhausted.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-IDsIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-IDsIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IDsIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
