% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dialogs.R
\name{DraftsIter}
\alias{DraftsIter}
\title{DraftsIter class}
\description{
An iterator for Telegram drafts.
}
\section{Super class}{
\code{\link[telegramR:RequestIter]{telegramR::RequestIter}} -> \code{DraftsIter}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DraftsIter-new}{\code{DraftsIter$new()}}
\item \href{#method-DraftsIter-load_next_chunk}{\code{DraftsIter$load_next_chunk()}}
\item \href{#method-DraftsIter-get_init_future}{\code{DraftsIter$get_init_future()}}
\item \href{#method-DraftsIter-clone}{\code{DraftsIter$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id=".next"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-.next'><code>telegramR::RequestIter$.next()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="async_init"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-async_init'><code>telegramR::RequestIter$async_init()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="collect"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-collect'><code>telegramR::RequestIter$collect()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="RequestIter" data-id="reset"><a href='../../telegramR/html/RequestIter.html#method-RequestIter-reset'><code>telegramR::RequestIter$reset()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DraftsIter-new"></a>}}
\if{latex}{\out{\hypertarget{method-DraftsIter-new}{}}}
\subsection{Method \code{new()}}{
Constructor for the DraftsIter class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DraftsIter$new(client, limit, entities = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client}}{The Telegram client.}

\item{\code{limit}}{The maximum number of drafts to retrieve.}

\item{\code{entities}}{The list of entities for which to fetch the drafts.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new DraftsIter object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DraftsIter-load_next_chunk"></a>}}
\if{latex}{\out{\hypertarget{method-DraftsIter-load_next_chunk}{}}}
\subsection{Method \code{load_next_chunk()}}{
Loads the next chunk of drafts.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DraftsIter$load_next_chunk()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A future that resolves to a list of drafts.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DraftsIter-get_init_future"></a>}}
\if{latex}{\out{\hypertarget{method-DraftsIter-get_init_future}{}}}
\subsection{Method \code{get_init_future()}}{
Gets the initialization future.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DraftsIter$get_init_future()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A future that resolves to the initialization result.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DraftsIter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DraftsIter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DraftsIter$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
