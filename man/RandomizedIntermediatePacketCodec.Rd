% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcpintermediate.R
\name{RandomizedIntermediatePacketCodec}
\alias{RandomizedIntermediatePacketCodec}
\title{RandomizedIntermediatePacketCodec}
\value{
A raw vector with a 4-byte length prefix and random padding.

A raw vector representing the original packet data without padding.
}
\description{
A codec that adds random padding to align packets to 4 bytes.
}
\details{
Encodes packets by prepending a 4-byte little-endian length prefix.
}
\section{Super classes}{
\code{\link[telegramR:PacketCodec]{telegramR::PacketCodec}} -> \code{\link[telegramR:IntermediatePacketCodec]{telegramR::IntermediatePacketCodec}} -> \code{RandomizedIntermediatePacketCodec}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RandomizedIntermediatePacketCodec-encode_packet}{\code{RandomizedIntermediatePacketCodec$encode_packet()}}
\item \href{#method-RandomizedIntermediatePacketCodec-read_packet}{\code{RandomizedIntermediatePacketCodec$read_packet()}}
\item \href{#method-RandomizedIntermediatePacketCodec-clone}{\code{RandomizedIntermediatePacketCodec$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="PacketCodec" data-id="initialize"><a href='../../telegramR/html/PacketCodec.html#method-PacketCodec-initialize'><code>telegramR::PacketCodec$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RandomizedIntermediatePacketCodec-encode_packet"></a>}}
\if{latex}{\out{\hypertarget{method-RandomizedIntermediatePacketCodec-encode_packet}{}}}
\subsection{Method \code{encode_packet()}}{
Encodes the packet with random padding.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RandomizedIntermediatePacketCodec$encode_packet(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A raw vector containing the packet data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector with a 4-byte length prefix and random padding.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RandomizedIntermediatePacketCodec-read_packet"></a>}}
\if{latex}{\out{\hypertarget{method-RandomizedIntermediatePacketCodec-read_packet}{}}}
\subsection{Method \code{read_packet()}}{
Reads a packet and removes any trailing random padding.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RandomizedIntermediatePacketCodec$read_packet(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{An object with a `readexactly` method.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector representing the original packet data without padding.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RandomizedIntermediatePacketCodec-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RandomizedIntermediatePacketCodec-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RandomizedIntermediatePacketCodec$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
