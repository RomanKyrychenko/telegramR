% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tcpobfuscated.R
\name{ObfuscatedIO}
\alias{ObfuscatedIO}
\title{ObfuscatedIO}
\description{
Handles obfuscated I/O operations for Telegram obfuscation.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{header}}{The obfuscation header as a raw vector.}

\item{\code{`_encrypt`}}{The AESModeCTR encryptor object.}

\item{\code{`_decrypt`}}{The AESModeCTR decryptor object.}

\item{\code{`_reader`}}{The reader connection object.}

\item{\code{`_writer`}}{The writer connection object.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{`_encrypt`}}{The AESModeCTR encryptor object.}

\item{\code{`_decrypt`}}{The AESModeCTR decryptor object.}

\item{\code{`_reader`}}{The reader connection object.}

\item{\code{`_writer`}}{The writer connection object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ObfuscatedIO-new}{\code{ObfuscatedIO$new()}}
\item \href{#method-ObfuscatedIO-readexactly}{\code{ObfuscatedIO$readexactly()}}
\item \href{#method-ObfuscatedIO-write}{\code{ObfuscatedIO$write()}}
\item \href{#method-ObfuscatedIO-init_header}{\code{ObfuscatedIO$init_header()}}
\item \href{#method-ObfuscatedIO-clone}{\code{ObfuscatedIO$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ObfuscatedIO-new"></a>}}
\if{latex}{\out{\hypertarget{method-ObfuscatedIO-new}{}}}
\subsection{Method \code{new()}}{
Initialize ObfuscatedIO.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObfuscatedIO$new(connection)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{connection}}{A connection object with `_reader`, `_writer`, and `packet_codec` fields.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ObfuscatedIO-readexactly"></a>}}
\if{latex}{\out{\hypertarget{method-ObfuscatedIO-readexactly}{}}}
\subsection{Method \code{readexactly()}}{
Reads exactly n bytes and decrypts them.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObfuscatedIO$readexactly(n)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{Number of bytes to read.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A raw vector of decrypted bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ObfuscatedIO-write"></a>}}
\if{latex}{\out{\hypertarget{method-ObfuscatedIO-write}{}}}
\subsection{Method \code{write()}}{
Encrypts and writes data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObfuscatedIO$write(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{A raw vector of data.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ObfuscatedIO-init_header"></a>}}
\if{latex}{\out{\hypertarget{method-ObfuscatedIO-init_header}{}}}
\subsection{Method \code{init_header()}}{
Initializes the header, encryption, and decryption objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObfuscatedIO$init_header(packet_codec)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{packet_codec}}{A packet codec object with an `obfuscate_tag` field.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list containing the header, encryptor, and decryptor.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ObfuscatedIO-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ObfuscatedIO-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ObfuscatedIO$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
