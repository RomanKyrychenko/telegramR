% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/telegrambaseclient.R
\name{TelegramBaseClient}
\alias{TelegramBaseClient}
\title{Telegram Base Client}
\description{
This class provides the core functionality for a Telegram client,
including connection management, session handling, and
message processing.
}
\details{
Abstract base class for telegram client implementation
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TelegramBaseClient-new}{\code{TelegramBaseClient$new()}}
\item \href{#method-TelegramBaseClient-connect}{\code{TelegramBaseClient$connect()}}
\item \href{#method-TelegramBaseClient-is_connected}{\code{TelegramBaseClient$is_connected()}}
\item \href{#method-TelegramBaseClient-disconnect}{\code{TelegramBaseClient$disconnect()}}
\item \href{#method-TelegramBaseClient-set_proxy}{\code{TelegramBaseClient$set_proxy()}}
\item \href{#method-TelegramBaseClient-get_version}{\code{TelegramBaseClient$get_version()}}
\item \href{#method-TelegramBaseClient-get_flood_sleep_threshold}{\code{TelegramBaseClient$get_flood_sleep_threshold()}}
\item \href{#method-TelegramBaseClient-set_flood_sleep_threshold}{\code{TelegramBaseClient$set_flood_sleep_threshold()}}
\item \href{#method-TelegramBaseClient-get_proxy}{\code{TelegramBaseClient$get_proxy()}}
\item \href{#method-TelegramBaseClient-clone}{\code{TelegramBaseClient$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-new"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Telegram client
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$new(
  session,
  api_id,
  api_hash,
  connection = NULL,
  use_ipv6 = FALSE,
  proxy = NULL,
  local_addr = NULL,
  timeout = 10,
  request_retries = 5,
  connection_retries = 5,
  retry_delay = 1,
  auto_reconnect = TRUE,
  sequential_updates = FALSE,
  flood_sleep_threshold = 60,
  raise_last_call_error = FALSE,
  device_model = NULL,
  system_version = NULL,
  app_version = NULL,
  lang_code = "en",
  system_lang_code = "en",
  base_logger = NULL,
  receive_updates = TRUE,
  catch_up = FALSE,
  entity_cache_limit = 5000
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{Session object or path to session file}

\item{\code{api_id}}{API ID from my.telegram.org}

\item{\code{api_hash}}{API hash from my.telegram.org}

\item{\code{connection}}{Connection class to use}

\item{\code{use_ipv6}}{Whether to connect through IPv6}

\item{\code{proxy}}{Proxy settings}

\item{\code{local_addr}}{Local address to bind to}

\item{\code{timeout}}{Connection timeout}

\item{\code{request_retries}}{How many times to retry requests}

\item{\code{connection_retries}}{How many times to retry connections}

\item{\code{retry_delay}}{Delay between retries}

\item{\code{auto_reconnect}}{Whether to automatically reconnect}

\item{\code{sequential_updates}}{Whether to process updates sequentially}

\item{\code{flood_sleep_threshold}}{Time in seconds to automatically sleep on flood wait errors}

\item{\code{raise_last_call_error}}{Whether to raise the last call error}

\item{\code{device_model}}{Device model to report}

\item{\code{system_version}}{System version to report}

\item{\code{app_version}}{App version to report}

\item{\code{lang_code}}{Language code}

\item{\code{system_lang_code}}{System language code}

\item{\code{base_logger}}{Base logger to use}

\item{\code{receive_updates}}{Whether to receive updates}

\item{\code{catch_up}}{Whether to catch up on missed updates}

\item{\code{entity_cache_limit}}{Maximum number of entities to keep in cache
Connect to Telegram

Establishes a connection to Telegram servers}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-connect"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-connect}{}}}
\subsection{Method \code{connect()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$connect()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A future that resolves when connected
Check if client is connected
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-is_connected"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-is_connected}{}}}
\subsection{Method \code{is_connected()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$is_connected()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if connected, FALSE otherwise
Disconnect from Telegram

Closes the connection to Telegram servers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-disconnect"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-disconnect}{}}}
\subsection{Method \code{disconnect()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$disconnect()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A future that resolves when disconnected
Set proxy for the connection
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-set_proxy"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-set_proxy}{}}}
\subsection{Method \code{set_proxy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$set_proxy(proxy)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{proxy}}{Proxy configuration
Get client version}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-get_version"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-get_version}{}}}
\subsection{Method \code{get_version()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$get_version()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Current client version
Get the flood sleep threshold
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-get_flood_sleep_threshold"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-get_flood_sleep_threshold}{}}}
\subsection{Method \code{get_flood_sleep_threshold()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$get_flood_sleep_threshold()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Current flood sleep threshold in seconds
Set the flood sleep threshold
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-set_flood_sleep_threshold"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-set_flood_sleep_threshold}{}}}
\subsection{Method \code{set_flood_sleep_threshold()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$set_flood_sleep_threshold(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{New threshold in seconds}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-get_proxy"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-get_proxy}{}}}
\subsection{Method \code{get_proxy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$get_proxy()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TelegramBaseClient-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TelegramBaseClient-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TelegramBaseClient$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
