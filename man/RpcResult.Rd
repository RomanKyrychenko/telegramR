% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rpcresult.R
\name{RpcResult}
\alias{RpcResult}
\title{RpcResult Class}
\description{
Represents the result of a Remote Procedure Call (RPC) in the Telegram API.
}
\details{
The `RpcResult` class encapsulates the response of an RPC call, including the request message ID, the body of the response, and any error that occurred.
}
\section{Super class}{
\code{\link[telegramR:TLObject]{telegramR::TLObject}} -> \code{RpcResult}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{req_msg_id}}{\code{numeric} The ID of the request message.}

\item{\code{body}}{\code{ANY} The body of the RPC result.}

\item{\code{error}}{\code{ANY} The error object, if any.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RpcResult-new}{\code{RpcResult$new()}}
\item \href{#method-RpcResult-from_reader}{\code{RpcResult$from_reader()}}
\item \href{#method-RpcResult-to_dict}{\code{RpcResult$to_dict()}}
\item \href{#method-RpcResult-clone}{\code{RpcResult$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-.bytes'><code>telegramR::TLObject$.bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".eq"><a href='../../telegramR/html/TLObject.html#method-TLObject-.eq'><code>telegramR::TLObject$.eq()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".ne"><a href='../../telegramR/html/TLObject.html#method-TLObject-.ne'><code>telegramR::TLObject$.ne()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id=".str"><a href='../../telegramR/html/TLObject.html#method-TLObject-.str'><code>telegramR::TLObject$.str()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="pretty_format"><a href='../../telegramR/html/TLObject.html#method-TLObject-pretty_format'><code>telegramR::TLObject$pretty_format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_bytes"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_bytes'><code>telegramR::TLObject$serialize_bytes()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="serialize_datetime"><a href='../../telegramR/html/TLObject.html#method-TLObject-serialize_datetime'><code>telegramR::TLObject$serialize_datetime()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="stringify"><a href='../../telegramR/html/TLObject.html#method-TLObject-stringify'><code>telegramR::TLObject$stringify()</code></a></span></li>
<li><span class="pkg-link" data-pkg="telegramR" data-topic="TLObject" data-id="to_json"><a href='../../telegramR/html/TLObject.html#method-TLObject-to_json'><code>telegramR::TLObject$to_json()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RpcResult-new"></a>}}
\if{latex}{\out{\hypertarget{method-RpcResult-new}{}}}
\subsection{Method \code{new()}}{
Initializes the `RpcResult` object with the given request message ID, body, and error.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RpcResult$new(req_msg_id, body, error)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{req_msg_id}}{\code{numeric} The ID of the request message.}

\item{\code{body}}{\code{ANY} The body of the RPC result.}

\item{\code{error}}{\code{ANY} The error object, if any.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `RpcResult` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RpcResult-from_reader"></a>}}
\if{latex}{\out{\hypertarget{method-RpcResult-from_reader}{}}}
\subsection{Method \code{from_reader()}}{
Reads and parses an `RpcResult` object from a binary reader.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RpcResult$from_reader(reader)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{reader}}{A `BinaryReader` object to read the binary data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An `RpcResult` object parsed from the binary data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RpcResult-to_dict"></a>}}
\if{latex}{\out{\hypertarget{method-RpcResult-to_dict}{}}}
\subsection{Method \code{to_dict()}}{
Converts the `RpcResult` object to a dictionary representation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RpcResult$to_dict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A named list representing the `RpcResult` object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RpcResult-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RpcResult-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RpcResult$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
